(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_update_htest.amlg"))

	(declare (assoc result (null)))

	; (call_entity "howso" "create_subtrainee" (assoc path ["A"] child_id "A"))

	; (call_entity "howso" "create_subtrainee" (assoc path ["A" "b"] child_id "b" ))

	; (call_entity "howso" "create_subtrainee" (assoc path ["A" "b" "c1"] child_id "c1" ))

	; (call_entity "howso" "create_subtrainee" (assoc path ["A" "b" "c2"] child_id "c2" ))


	; (call_entity "howso" "train" (assoc
	; 	features (list "a" "b" "c")
	; 	cases
	; 		(list
	; 			(list 10 20 30)
	; 			(list 11 22 33)
	; 			(list 12 24 36)
	; 			(list 13 26 39)
	; 		)
	; ))

	; (call_entity "howso" "execute_on_subtrainee" (assoc
	; 	path ["A"]
	; 	method "train"
	; 	payload
	; 		(assoc
	; 			features (list "x" "y")
	; 			cases
	; 				(list
	; 					(list 1 1)
	; 					(list 2 1)
	; 				)
	; 		)
	; ))

	; (call_entity "howso" "execute_on_subtrainee" (assoc
	; 	path ["A" "b"]
	; 	method "train"
	; 	payload
	; 		(assoc
	; 			features (list "x" "y")
	; 			cases
	; 				(list
	; 					(list 3 3)
	; 					(list 4 4)
	; 					(list 5 5)
	; 				)
	; 		)
	; ))

	; (call_entity "howso" "execute_on_subtrainee" (assoc
	; 	path ["A" "b" "c1"]
	; 	method "train"
	; 	payload
	; 		(assoc
	; 			features (list "x" "y" "z")
	; 			cases
	; 				(list
	; 					(list 1 1 3)
	; 					(list 1 2 4)
	; 					(list 1 3 5)
	; 				)
	; 		)
	; ))

	; (call_entity "howso" "execute_on_subtrainee" (assoc
	; 	path ["A" "b" "c2"]
	; 	method "train"
	; 	payload
	; 		(assoc
	; 			features (list "x" "y" "w")
	; 			cases
	; 				(list
	; 					(list 4 4 4)
	; 					(list 5 5 5)
	; 				)
	; 		)
	; ))

	; (store_entity "./htest.amlg" "howso" "amlg" (false) {flatten (true)})

	(call_entity "howso" "upgrade_trainee" (assoc
		trainee "htest"
		root_filepath "../"
		trainee_amlg_filepath "./"
	))

	(print (call_entity "howso" "get_hierarchy"))


	(call exit_if_failures (assoc msg unit_test_name ))
)
