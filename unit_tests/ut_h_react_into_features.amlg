(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_react_into_features.amlg"))

	(declare (assoc
		dataset
			(list
				["x" "y" "color"]
				[ 0 0 "red"]
				[ 1 0 "red"]
				[ 0 1 "red"]
				[ 2 1 "red"]
				[ 3 1 "red"]
				[ 0 3 "red"]
				[ -2 4 "red"]
				[ 2 3 "red"]
				[ 4 2 "red"]
				[ 6 5 "red"]
				[ 10 9 "blue"]
				[ 10 9 "blue"]
				[ 10 11 "blue"]
				[ 10 12 "blue"]
				[ 12 10 "blue"]
				[ 9 12 "blue"]
				[ 13 14 "blue"]
				[ 14 11 "blue"]
				[ 13 10 "blue"]
				[ 17 7 "blue"]
			)

	))
	(declare (assoc
		data (tail dataset)
		features (first dataset)
	))
	(call_entity "howso" "set_feature_attributes" (assoc
		feature_attributes (assoc "color" (assoc "type" "nominal"))
	))

	(call_entity "howso" "train" (assoc
		cases data
		features features
		session "session1"
	))

	(call_entity "howso" "analyze")

	(declare (assoc
		result (call_entity "howso" "get_params")
	))
	(call keep_result_payload)
	(print "Analyzed to color, x and y: ")
	(call assert_same (assoc
		obs (first (indices (get result ["hyperparameter_map" "targetless"])))
		exp "color.x.y."
	))

	(call_entity "howso" "react_into_features" (assoc
		features features
		familiarity_conviction_addition "fc"
		similarity_conviction "sc"
		distance_contribution "dc"
		influence_weight_entropy "if"
		analyze (true)
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "single_react" (assoc
					context_features (list "x" "y")
					context_values (list 12 10)
					derived_context_features (list "sc" "dc" "non-existent")
					action_features (list "color")
				))
				(list 1 "payload" "action_values")
			)
	))
	(call assert_same (assoc obs result exp (list "blue")))

	(assign (assoc result (call_entity "howso" "get_feature_attributes") ))
	(call keep_result_payload)
	(print "Feature attributes are updated: ")
	(call assert_same (assoc
		obs result
		exp
			{
				color {type "nominal"}
				dc { bounds {max .infinity min 0} data_type "number" type "continuous" }
				fc { bounds {max .infinity min 0} data_type "number" type "continuous" }
				if { bounds {max .infinity min 0} data_type "number" type "continuous" }
				sc { bounds {max .infinity min 0} data_type "number" type "continuous" }
				x { bounds {allow_null (true)} type "continuous"  }
				y { bounds {allow_null (true)} type "continuous" }
			}
	))


	(assign (assoc result (call_entity "howso" "get_params") ))
	(call keep_result_payload)

	(print "Auto analyzed to color, dc, fc, if, sc, x and y: ")
	(call assert_same (assoc
		obs (first (indices (get result ["hyperparameter_map" "targetless"])))
		exp "color.dc.fc.if.sc.x.y."
	))

	(call exit_if_failures (assoc msg "Feature attributes and hyperparameters updated."))

	(call_entity "howso" "train" (assoc
		cases
			[
				[10 9 "blue"]
				[28 8 "blue"]
			]
		features features
		session "session1"
	))


	(assign (assoc result (call_entity "howso" "get_cases") ))
	(call keep_result_payload)

	(print "Trained features are unchanged: ")
	(call assert_same (assoc
		obs (get result "features")
		exp features
		unordered (true)
	))

	(assign (assoc
		result
			(call_entity "howso" "get_cases" (assoc
				features ["fc" "sc" "dc" "if"]
			))
	))
	(call keep_result_payload)
	(print "Training auto-computes features: ")
	(call assert_true (assoc
		obs (not (contains_value (apply "append" (get result "cases")) (null)) )
	))

	(declare (assoc last_case_similarity_conviction (get result ["cases" 21 1]) ))

	(print "Last case has low similarity conviction: " last_case_similarity_conviction " " )
	(call assert_true (assoc
		obs (< last_case_similarity_conviction 1)
	))

	(call_entity "howso" "analyze")

	(assign (assoc
		result
			(call_entity "howso" "get_cases" (assoc
				features ["fc" "sc" "dc" "if"]
			))
	))
	(call keep_result_payload)

	(declare (assoc new_last_case_sc (get result ["cases" 21 1]) ))

	(print "Computed values are recomputed on analyze: ")
	(call assert_true (assoc
		obs (!= last_case_similarity_conviction new_last_case_sc )
	))

	(print "Last case still has low similarity conviction: " new_last_case_sc " " )
	(call assert_true (assoc
		obs (< new_last_case_sc 1)
	))

	(call exit_if_failures (assoc msg unit_test_name ))
)


