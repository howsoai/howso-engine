(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_train_react.amlg"))

	(call_entity "howso" "set_internal_parameters" (assoc
		default_hyperparameter_map (assoc "k" 2 "p" 0.4 "dt" -1)
	))

	(declare (assoc
		training_data
			(list
				(list 1 5 1 1 1)
				(list 2 1 1 2 2)
				(null)
				(list (null) (null) (null) (null) (null))
				(list 3 -30000 1 3 3)
				(list 3.1 2000 1 3 3)
			)
		context_features (list "A" "B" "C")
		action_features (list "D" "E")
	))

	;train
	(call_entity "howso" "train" (assoc
		input_cases training_data
		features (append context_features action_features)
		session "my_session"
	))

;VERIFY TRAINING AND MODEL SIZE
	(print "model size: ")
	(declare (assoc model_size (call_entity "howso" "get_num_training_cases")))
	(call assert_same (assoc
		exp 4
		obs (get model_size (list 1 "payload" "count"))
	))

	(print "trained features: ")
	(declare (assoc result (call_entity "howso" "debug_label" (assoc label "!trainedFeatures"))))
	(call assert_same (assoc
		obs (zip result)
		exp (zip (list "A" "B" "C" "D" "E"))
	))
	(call exit_if_failures (assoc msg "train and model size"))


;VERIFY REACTING TO EXACT CONTEXT
	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				context_features (list "A" "B" "C")
				context_values (list 1 5 1)
				action_features (list "D" "E")
			))
	))
	(print "React to exact context match: ")
	(call assert_same (assoc
		exp (list 1 1)
		obs (get result (list 1 "payload" "action_values"))
	))
	(call exit_if_failures (assoc msg "React to exact context"))



;VERIFY REACTING TO NEW VALUES
	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				context_features (list "A" "B" "C")
				context_values (list 1 2 3)
				action_features (list "D" "E")
			))
	))
	(print "React to new values: ")
	(call assert_approximate (assoc
		exp (list 1.41 1.41)
		obs (get result (list 1 "payload" "action_values"))
		thresh 0.001
	))
	(call exit_if_failures (assoc msg "React to new context"))



;VERIFY REACT TO DATAPOINT WITH ORDINAL ACTIONS
	(call_entity "howso" "set_feature_attributes" (assoc
		features (assoc "E" (assoc "type" "ordinal"))
	))

	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				context_features (list "A" "B" "C")
				context_values (list 1 2 3)
				action_features (list "D" "E")
			))
	))
	(print "React to trained, with ordinal: ")
	(call assert_approximate (assoc
		exp (list 1.41 1)
		obs (get result (list 1 "payload" "action_values"))
		thresh 0.001
	))
	(call exit_if_failures (assoc msg "React to new context with ordinal"))



;VERIFY REACT TO EXISTING DATAPOINT WITH ORDINAL
	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				context_features (list "A" "B" "C")
				context_values (list 1 5 1)
				action_features (list "D" "E")
			))
	))
	(print "React to exact match, with ordinal: ")
	(call assert_same (assoc
		exp (list 1 1)
		obs (get result (list 1 "payload" "action_values"))
	))

	(call exit_if_failures (assoc msg "React to exact context with ordinal"))

	(call exit_if_failures (assoc msg unit_test_name))
)
