(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_hierarchy.amlg"))

	(call_entity "howso" "create_trainee" (assoc trainee "model" ))

	(call_entity "howso" "create_trainee" (assoc
		trainee "model"
		child_trainee "A"
	))

	(call_entity "howso" "create_trainee" (assoc
		trainee "model"
		parent_trainee "A"
		child_trainee "b"
	))

	(call_entity "howso" "create_trainee" (assoc
		trainee "model"
		parent_trainee "A"
		child_trainee "c"
	))

	(declare (assoc
		result
			(get
				(call_entity "howso" "create_trainee" (assoc
					trainee "model"
					parent_trainee "bad_parent"
					child_trainee "d"
				))
				(list "errors" 0 "detail")
			)
	))

	(print "Bad parent check in create_trainee: ")
	(call assert_same (assoc
		obs result
		exp "Specified invalid parent_trainee."
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "create_trainee" (assoc
					trainee "model"
					child_trainee "b"
				))
				(list "errors" 0 "detail")
			)
	))

	(print "Existing child check in create_trainee: ")
	(call assert_same (assoc
		obs result
		exp "Specified child_trainee is already in the hierarchy."
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "get_hierarchy" (assoc trainee "model"))
				"payload"
			)
	))

	(print "Hierarchy for model is correct: ")
	(call assert_same (assoc
		obs result
		exp
			(assoc
				hierarchy_map
					(assoc
						A
							(assoc
								b (assoc)
								c (assoc)
							)
					)
				is_contained_map (assoc A (true) b (true) c (true))
			)
	))

	(call exit_if_failures (assoc msg "Creating Child trainees."))

	(assign (assoc
		result
			(get
				(call_entity "howso" "execute_method" (assoc
					trainee "model"
					child_trainee "bad_child"
					method "train"
					payload (assoc)
				))
				(list "errors" 0 "detail")
			)
	))

	(print "Invalid child check for execute_method: ")
	(call assert_same (assoc
		obs result
		exp  "Specified child_trainee is not in the hierarchy."
	))

	(call_entity "howso" "train" (assoc
		trainee "model"
		features (list "a" "b" "c")
		input_cases
			(list
				(list 10 20 30)
				(list 11 22 33)
				(list 12 24 36)
				(list 13 26 39)
			)
	))

	(call_entity "howso" "execute_method" (assoc
		trainee "model"
		child_trainee "A"
		method "train"
		payload
			(assoc
				features (list "x" "y")
				input_cases
					(list
						(list 1 1)
						(list 2 1)
						(list 3 3)
						(list 4 4)
						(list 5 5)
						(list 6 6)
					)
			)
	))


	(call_entity "howso" "move_cases" (assoc
		trainee "model"
		child_trainee "A"
		target_trainee "b"
		num_cases 2
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "get_num_training_cases" (assoc
					trainee "model"
				))
				(list "payload" "count")
			)
	))

	(print "Cases in model: ")
	(call assert_same (assoc
		obs result
		exp 4
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "execute_method" (assoc
					trainee "model"
					child_trainee "A"
					method "get_num_training_cases"
				))
				(list "payload" "count")
			)
	))

	(print "Cases in child A: ")
	(call assert_same (assoc
		obs result
		exp 4
	))


	(assign (assoc
		result
			(get
				(call_entity "howso" "execute_method" (assoc
					trainee "model"
					child_trainee "b"
					method "get_num_training_cases"
				))
				(list "payload" "count")
			)
	))

	(print "Cases in grandchild b: ")
	(call assert_same (assoc
		obs result
		exp 2
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "move_cases" (assoc
					trainee "model"
					child_trainee "x"
					target_trainee "b"
					num_cases 2
				))
				(list "errors" 0 "detail")
			)
	))
	(print "move_cases fails from invalid child: ")
	(call assert_same  (assoc
		obs result
		exp  "Invalid child_trainee specified."
	))

	(call exit_if_failures (assoc msg "Excute method and move cases."))


	(print

		(call_entity "howso" "copy" (assoc
			trainee "model"
			target_trainee "b"
			parent_trainee "A"
			child_trainee "b"
		))

		(call_entity "howso" "copy" (assoc
			trainee "model"
			target_trainee "d"
			parent_trainee "A"
			child_trainee "bad_child"
		))

		(call_entity "howso" "copy" (assoc
			trainee "model"
			target_trainee "d"
			child_trainee "b"
		))

		(call_entity "howso" "copy" (assoc
			trainee "model"
			target_trainee "copyA"
			parent_trainee "model"
			child_trainee "A"
		))


	)
	;(call_entity "howso" "get_hierarchy" (assoc trainee "model"))






	; (call_entity "howso" "save" (assoc
	; 	trainee "model"
	; 	child_trainee "C"
	; 	filename "deleteme"
	; ))

	; (call_entity "howso" "save" (assoc
	; 	trainee "model"
	; 	child_trainee "B"
	; 	filename "deleteme"
	; ))


	; (call_entity "howso" "delete" (assoc
	; 	trainee "model"
	; 	child_trainee "B"
	; ))


	(call exit_if_failures (assoc msg unit_test_name ))
)
