(seq

	(declare (assoc ut_howso_start_time (system_time)))

	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_conviction.amlg"))

	(call_entity "howso" "create_trainee" (assoc trainee "holed" ))
	(call_entity "howso" "create_trainee" (assoc trainee "iris" ))
	(call_entity "howso" "set_feature_attributes" (assoc
		trainee "holed"
		features (assoc "E" (assoc "type" "nominal") )
	))
	(call_entity "howso" "set_feature_attributes" (assoc
		trainee "iris"
		features (assoc "E" (assoc "type" "nominal") )
	))
	(assign_to_entities "howso" (assoc trainee "holed"))

	(declare (assoc
		iris_holed
			(list
				(list 6.4 2.8 5.6 2.2 2)
				(list 5 (null) 3.3 (null) 1)
				(list 4.9 2.5 4.5 1.7 (null))
				(list (null) 3.1 (null) 0.1 0)
				(list 5.7 3.8 1.7 0.3 0)
				(list 4.4 3.2 1.3 0.2 0)
				(list 5.4 3.4 1.5 0.4 0)
				(list 6.9 3.1 5.1 2.3 2)
				(list 6.7 3.1 4.4 (null) 1)
				(list 5.1 (null) (null) 0.4 0)
				(list (null) (null) 3.9 (null) 1)
				(list 6.9 3.1 (null) 1.5 (null))
				(list 5.8 (null) 1.2 0.2 0)
				(list 5.4 3.9 (null) 0.4 0)
				(list 7.7 (null) 6.7 2.2 2)
				(list (null) 3.3 4.7 1.6 1)
				(list 6.8 (null) 5.9 2.3 2)
				(list 7.6 3 6.6 2.1 2)
				(list (null) 3.2 5.3 (null) (null))
				(list 5.7 4.4 (null) 0.4 (null))
				(list 6.7 3.3 (null) (null) 2)
				(list 6.4 2.8 5.6 2.1 2)
				(list 5.4 3.9 1.3 0.4 0)
				(list 6.1 2.6 5.6 1.4 2)
				(list (null) 3 (null) (null) (null))
				(list 5.2 (null) 1.5 0.2 0)
				(list 5.8 2.6 4 1.2 1)
				(list 5.9 3 5.1 1.8 (null))
				(list (null) (null) 4.5 (null) 1)
				(list 6.7 3 5 (null) (null))
				(list 6.3 2.3 4.4 1.3 1)
				(list 5.1 2.5 3 1.1 1)
				(list 6.4 3.2 4.5 1.5 1)
				(list 6.8 3 (null) 2.1 (null))
				(list 6.2 2.8 4.8 1.8 (null))
				(list 6.9 (null) 5.7 2.3 2)
				(list (null) 3.2 5.1 2 2)
				(list 5.8 2.8 5.1 (null) 2)
				(list 5.1 3.8 1.5 0.3 0)
				(list 4.8 3 1.4 0.3 0)
				(list 7.9 3.8 6.4 2 2)
				(list 5.8 2.7 5.1 1.9 2)
				(list (null) 3 5.2 2.3 2)
				(list (null) 3.8 1.9 0.4 (null))
				(list 4.7 3.2 1.6 0.2 (null))
				(list 6 2.2 5 (null) 2)
				(list 4.8 3.4 1.6 0.2 0)
				(list 7.7 2.6 6.9 2.3 2)
				(list (null) 3.6 1 0.2 0)
				(list 7.2 3.2 (null) 1.8 2)
				(list 5 3.3 (null) (null) 0)
				(list 6.6 3 4.4 (null) 1)
				(list (null) 2.8 4 1.3 1)
				(list 5 3.2 1.2 0.2 0)
				(list 7 3.2 (null) 1.4 1)
				(list 6 3 4.8 1.8 (null))
				(list 7.4 (null) (null) (null) 2)
				(list 5.8 2.7 5.1 1.9 (null))
				(list 6.2 3.4 5.4 (null) 2)
				(list 5 2 3.5 1 1)
				(list 5.6 2.5 3.9 1.1 1)
				(list 6.7 3.1 5.6 2.4 2)
				(list 6.3 (null) 5 1.9 (null))
				(list 6.4 3.1 5.5 1.8 2)
				(list (null) 2.2 4.5 (null) 1)
				(list 7.3 (null) (null) 1.8 (null))
				(list 4.4 3 1.3 0.2 (null))
				(list (null) 3.6 (null) (null) 2)
				(list (null) 3 5.5 1.8 (null))
				(list 5 3.4 (null) 0.2 0)
				(list 4.7 3.2 1.3 0.2 0)
				(list (null) 2.9 4.6 1.3 1)
				(list 5.5 (null) 1.3 0.2 0)
				(list 7.7 3 6.1 2.3 2)
				(list 6.1 3 4.9 (null) 2)
				(list 4.9 3.1 1.5 0.1 (null))
				(list 5.5 2.4 3.8 1.1 1)
				(list 5.7 2.9 4.2 (null) 1)
				(list 6 (null) (null) 1.5 1)
				(list (null) 2.7 5.3 (null) 2)
				(list 5.4 3.7 (null) (null) (null))
				(list 6.1 (null) 4.7 1.4 (null))
				(list 6.5 2.8 4.6 1.5 1)
				(list 5.6 (null) 4.2 1.3 1)
				(list 6.3 3.4 5.6 2.4 (null))
				(list 4.9 3.1 1.5 (null) 0)
				(list 6.8 2.8 4.8 1.4 1)
				(list 5.7 (null) 4.5 1.3 1)
				(list 6 2.7 5.1 1.6 1)
				(list 5 3.5 1.3 0.3 0)
				(list 6.5 (null) 5.2 2 2)
				(list 6.1 (null) 4.7 1.2 1)
				(list 5.1 (null) 1.4 (null) 0)
				(list 4.6 3.1 1.5 0.2 0)
				(list (null) 3 5.8 2.2 2)
				(list 4.6 3.4 1.4 0.3 0)
				(list 4.6 3.2 (null) 0.2 0)
				(list 7.7 2.8 (null) 2 2)
				(list (null) 3.2 (null) 1.8 1)
				(list 5.1 3.8 1.6 (null) 0)
				(list 4.9 3 (null) (null) 0)
				(list 4.9 (null) 3.3 1 (null))
				(list (null) 2.3 1.3 0.3 0)
				(list 5.8 (null) 4.1 1 1)
				(list (null) (null) 1.6 0.4 0)
				(list (null) 3.4 1.4 (null) (null))
				(list (null) 3.7 1.5 (null) 0)
				(list (null) 3.6 (null) (null) 0)
				(list 5.6 2.9 (null) 1.3 1)
				(list 4.8 3.1 1.6 (null) 0)
				(list 6.3 2.7 4.9 1.8 2)
				(list 5.7 2.8 4.1 (null) 1)
				(list (null) 3 1.6 0.2 0)
				(list (null) 3.3 6 2.5 2)
				(list (null) (null) 1.6 (null) 0)
				(list 5.5 2.6 4.4 (null) 1)
				(list 5.7 3 4.2 1.2 1)
				(list 4.4 2.9 1.4 (null) (null))
				(list 4.8 3 (null) 0.1 0)
				(list 5.5 2.4 3.7 (null) (null))
			)
		iris_values
			(list
				(list 6.4 2.8 5.6 2.2 2)
				(list 5.0 2.3 3.3 1.0 1)
				(list 4.9 2.5 4.5 1.7 2)
				(list 4.9 3.1 1.5 0.1 0)
				(list 5.7 3.8 1.7 0.3 0)
				(list 4.4 3.2 1.3 0.2 0)
				(list 5.4 3.4 1.5 0.4 0)
				(list 6.9 3.1 5.1 2.3 2)
				(list 6.7 3.1 4.4 1.4 1)
				(list 5.1 3.7 1.5 0.4 0)
				(list 5.2 2.7 3.9 1.4 1)
				(list 6.9 3.1 4.9 1.5 1)
				(list 5.8 4.0 1.2 0.2 0)
				(list 5.4 3.9 1.7 0.4 0)
				(list 7.7 3.8 6.7 2.2 2)
				(list 6.3 3.3 4.7 1.6 1)
				(list 6.8 3.2 5.9 2.3 2)
				(list 7.6 3.0 6.6 2.1 2)
				(list 6.4 3.2 5.3 2.3 2)
				(list 5.7 4.4 1.5 0.4 0)
				(list 6.7 3.3 5.7 2.1 2)
				(list 6.4 2.8 5.6 2.1 2)
				(list 5.4 3.9 1.3 0.4 0)
				(list 6.1 2.6 5.6 1.4 2)
				(list 7.2 3.0 5.8 1.6 2)
				(list 5.2 3.5 1.5 0.2 0)
				(list 5.8 2.6 4.0 1.2 1)
				(list 5.9 3.0 5.1 1.8 2)
				(list 5.4 3.0 4.5 1.5 1)
				(list 6.7 3.0 5.0 1.7 1)
				(list 6.3 2.3 4.4 1.3 1)
				(list 5.1 2.5 3.0 1.1 1)
				(list 6.4 3.2 4.5 1.5 1)
				(list 6.8 3.0 5.5 2.1 2)
				(list 6.2 2.8 4.8 1.8 2)
				(list 6.9 3.2 5.7 2.3 2)
				(list 6.5 3.2 5.1 2.0 2)
				(list 5.8 2.8 5.1 2.4 2)
				(list 5.1 3.8 1.5 0.3 0)
				(list 4.8 3.0 1.4 0.3 0)
				(list 7.9 3.8 6.4 2.0 2)
				(list 5.8 2.7 5.1 1.9 2)
				(list 6.7 3.0 5.2 2.3 2)
				(list 5.1 3.8 1.9 0.4 0)
				(list 4.7 3.2 1.6 0.2 0)
				(list 6.0 2.2 5.0 1.5 2)
				(list 4.8 3.4 1.6 0.2 0)
				(list 7.7 2.6 6.9 2.3 2)
				(list 4.6 3.6 1.0 0.2 0)
				(list 7.2 3.2 6.0 1.8 2)
				(list 5.0 3.3 1.4 0.2 0)
				(list 6.6 3.0 4.4 1.4 1)
				(list 6.1 2.8 4.0 1.3 1)
				(list 5.0 3.2 1.2 0.2 0)
				(list 7.0 3.2 4.7 1.4 1)
				(list 6.0 3.0 4.8 1.8 2)
				(list 7.4 2.8 6.1 1.9 2)
				(list 5.8 2.7 5.1 1.9 2)
				(list 6.2 3.4 5.4 2.3 2)
				(list 5.0 2.0 3.5 1.0 1)
				(list 5.6 2.5 3.9 1.1 1)
				(list 6.7 3.1 5.6 2.4 2)
				(list 6.3 2.5 5.0 1.9 2)
				(list 6.4 3.1 5.5 1.8 2)
				(list 6.2 2.2 4.5 1.5 1)
				(list 7.3 2.9 6.3 1.8 2)
				(list 4.4 3.0 1.3 0.2 0)
				(list 7.2 3.6 6.1 2.5 2)
				(list 6.5 3.0 5.5 1.8 2)
				(list 5.0 3.4 1.5 0.2 0)
				(list 4.7 3.2 1.3 0.2 0)
				(list 6.6 2.9 4.6 1.3 1)
				(list 5.5 3.5 1.3 0.2 0)
				(list 7.7 3.0 6.1 2.3 2)
				(list 6.1 3.0 4.9 1.8 2)
				(list 4.9 3.1 1.5 0.1 0)
				(list 5.5 2.4 3.8 1.1 1)
				(list 5.7 2.9 4.2 1.3 1)
				(list 6.0 2.9 4.5 1.5 1)
				(list 6.4 2.7 5.3 1.9 2)
				(list 5.4 3.7 1.5 0.2 0)
				(list 6.1 2.9 4.7 1.4 1)
				(list 6.5 2.8 4.6 1.5 1)
				(list 5.6 2.7 4.2 1.3 1)
				(list 6.3 3.4 5.6 2.4 2)
				(list 4.9 3.1 1.5 0.1 0)
				(list 6.8 2.8 4.8 1.4 1)
				(list 5.7 2.8 4.5 1.3 1)
				(list 6.0 2.7 5.1 1.6 1)
				(list 5.0 3.5 1.3 0.3 0)
				(list 6.5 3.0 5.2 2.0 2)
				(list 6.1 2.8 4.7 1.2 1)
				(list 5.1 3.5 1.4 0.3 0)
				(list 4.6 3.1 1.5 0.2 0)
				(list 6.5 3.0 5.8 2.2 2)
				(list 4.6 3.4 1.4 0.3 0)
				(list 4.6 3.2 1.4 0.2 0)
				(list 7.7 2.8 6.7 2.0 2)
				(list 5.9 3.2 4.8 1.8 1)
				(list 5.1 3.8 1.6 0.2 0)
				(list 4.9 3.0 1.4 0.2 0)
				(list 4.9 2.4 3.3 1.0 1)
				(list 4.5 2.3 1.3 0.3 0)
				(list 5.8 2.7 4.1 1.0 1)
				(list 5.0 3.4 1.6 0.4 0)
				(list 5.2 3.4 1.4 0.2 0)
				(list 5.3 3.7 1.5 0.2 0)
				(list 5.0 3.6 1.4 0.2 0)
				(list 5.6 2.9 3.6 1.3 1)
				(list 4.8 3.1 1.6 0.2 0)
				(list 6.3 2.7 4.9 1.8 2)
				(list 5.7 2.8 4.1 1.3 1)
				(list 5.0 3.0 1.6 0.2 0)
				(list 6.3 3.3 6.0 2.5 2)
				(list 5.0 3.5 1.6 0.6 0)
				(list 5.5 2.6 4.4 1.2 1)
				(list 5.7 3.0 4.2 1.2 1)
				(list 4.4 2.9 1.4 0.2 0)
				(list 4.8 3.0 1.4 0.1 0)
				(list 5.5 2.4 3.7 1.0 1)
			)
	))

	(declare (assoc
		iris_features (list "A" "B" "C" "D" "E")
		result (null)
	))

	(declare (assoc
		context_key (apply "concat" (weave (sort iris_features) "."))
	))

	(print "Observing iris holed\n")
	(call_entity "howso" "train" (assoc
		features iris_features
		input_cases iris_holed
		trainee "holed"
	))

	(print "Observing iris\n")
	(call_entity "howso" "train" (assoc
		features iris_features
		input_cases iris_values
		trainee "iris"
	))

;VERIFY COMPUTE AND STORE CONVICTIONS
	(print "react_into_features\n")

	(call_entity "howso" "set_internal_parameters" (assoc
		trainee "iris"
		default_hyperparameter_map (assoc "k" 3 "p" 0.4 "dt" -1)
	))
	(call_entity "howso" "react_into_features" (assoc
		trainee "iris"
		features iris_features
		p_value_of_removal (true)
		familiarity_conviction_addition (true)
	))

	(assign (assoc result
		(call_entity "howso" "retrieve_extreme_cases_for_feature" (assoc
			trainee "iris"
			features (list "familiarity_conviction_addition" "p_value_of_removal" )
			sort_feature "familiarity_conviction_addition"
			num 5
		))
	))

	(print "Top 5 iris conviction values: ")
	(call assert_approximate (assoc
		obs (get result (list "payload" "cases"))
		exp (list ;top 5 convictions, sorted with highest as first
				(list 2296 0.99999)
				(list 85   0.99995)
				(list 45   0.99992)
				(list 38 0.99990)
				(list 28 0.99986)
			)
		percent 0.3
	))

	(call exit_if_failures (assoc msg "Computed conviction for top 5"))

	(assign (assoc result
		(call_entity "howso" "retrieve_extreme_cases_for_feature" (assoc
			trainee "iris"
			features (append iris_features "familiarity_conviction_addition" )
			sort_feature "familiarity_conviction_addition"
			num -2
		))
	))
	(print "Bottom 2 iris conviction case values: ")
	(call assert_approximate (assoc
		obs (get result (list "payload" "cases"))
		exp (list ;bottom 2 convictions, sorted with lowest as first
				(list 6.4 2.8 5.6 2.2 "2" 0.14036677830625047)
        		(list 6.4 2.8 5.6 2.1 "2" 0.1428525494178415)
			)
		percent 0.02
	))

	(call exit_if_failures (assoc msg "Computed conviction for bottom 2"))


;VERIFY CONVICTION OF FEATURES

	(assign (assoc
		result
			(get
				(call_entity "howso" "compute_conviction_of_features" (assoc
					trainee "iris"
					features iris_features
					prediction_conviction (false)
				))
				(list "payload" "familiarity_conviction_addition")
			)
	))

	(print "Iris feature conviction: ")
	(call assert_approximate (assoc
		obs result
		exp (assoc "A" .78 "B" .88 "C" .85 "D" .90 "E" 2.9)
		percent 0.1
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "compute_conviction_of_features" (assoc
					trainee "iris"
					features iris_features
					action_features (list "E")
					prediction_conviction (false)
				))
				(list "payload" "familiarity_conviction_addition")
			)
	))

	(print "Iris feature conviction vs action feature: ")
	(call assert_approximate (assoc
		obs result
		exp (assoc "A" 1.33 "B" 0.49 "C" .76 "D" 1.15 "E" .infinity)
	))


	(call exit_if_failures (assoc msg "Computed feature conviction"))


;VERIFY IMPUTE CONVICTION of TRAINEE vs TRAINEE
	(declare (assoc
		conviction_of_iris
			(call_entity "howso" "batch_react_group" (assoc
				trainee "iris"
				trainees_to_compare (list "iris")
				features iris_features
				kl_divergence_addition (true)
			))
	))

	(print "conviction of iris (vs iris): " conviction_of_iris " ")
	(call assert_approximate  (assoc obs (get conviction_of_iris (list "payload" "familiarity_conviction_addition" 0)) exp 2.06 percent .1))

	(print "kl_divergence of iris (vs iris): " conviction_of_iris " ")
	(call assert_approximate (assoc obs (get conviction_of_iris (list "payload" "kl_divergence_addition" 0)) exp 0.00188 percent .1))

	(declare (assoc
		start_time (system_time)
		conviction_of_holed
			(call_entity "howso" "batch_react_group" (assoc
				trainee "iris"
				trainees_to_compare (list "holed")
				features iris_features
			))
	))
	(print "conviction of holed (vs iris): " conviction_of_holed " ")
	(call assert_approximate (assoc obs (get conviction_of_holed (list "payload" "familiarity_conviction_addition" 0)) exp 0.6 thresh .2))

	(print "imputing iris test data, please wait... ")

	;impute
	(call_entity "howso" "impute" (assoc features iris_features trainee "holed"))

	;get data
	(declare (assoc
		iris_filled
			(call_entity "howso" "get_cases" (assoc features iris_features trainee "holed" indicate_imputed 1))
	))

	(print "finished filling: [ " (- (system_time) start_time) "s ]\n")


	(declare (assoc
		conviction_of_filled
			(get
				(call_entity "howso" "batch_react_group" (assoc
					trainee "iris"
					trainees_to_compare (list "holed")
					features iris_features
				))
				(list "payload" "familiarity_conviction_addition" 0)
			)
	))

	(print "conviction of filled (vs iris): " conviction_of_filled " ")
	(call assert_approximate (assoc obs conviction_of_filled exp 1.4 percent .6))
	(call exit_if_failures (assoc msg "Conviction of holed iris vs iris" ))

	(call_entity "howso" "set_internal_parameters" (assoc
		trainee "iris"
		default_hyperparameter_map (assoc "k" 10 "p" 3 "dt" -1)
	))

;VERIFY SETTING and CALCULATING DEVIATIONS
	(print "Analyzing iris for feature deviations...\n")
	(call_entity "howso" "analyze" (assoc
		trainee "iris"
		bypass_hyperparameter_analysis (true)
		bypass_calculate_feature_residuals (false)
		context_features iris_features
		analysis_sub_model_size 104
		use_deviations (false)
	))


	(assign (assoc
		result
			(get
				(call_entity "howso" "get_feature_residuals" (assoc trainee "iris"))
				"payload"
			)
	))

	(declare (assoc full_residuals result))

	;check the value for E separately because it's small and needs to be checked against a threshold
	(assign (assoc E (get result "E")))
	(assign (assoc result (remove result "E")))
	(call assert_approximate (assoc
		obs result
		exp
			(assoc
				"A" .28
				"B" .22
				"C" .23
				"D" .13
			)
		percent .2
	))
	;check the value for E separately expeted to be between 0.01 and 0.09
	(call assert_approximate (assoc obs E exp 0.05 thresh .04))
	(call exit_if_failures (assoc msg "Analyzing for feature deviations"))

	(print "model is restored to original size after holdouts during analyze: ")
	(call assert_same (assoc
		exp 120
		obs (get (call_entity "howso" "get_num_training_cases" (assoc trainee "iris")) (list "payload" "count"))
	))

	(declare (assoc feat_attr (get (call_entity "howso" "get_feature_attributes" (assoc trainee "iris" )) "payload") ))
	(assign "feat_attr"
		(list "B" "observational_error") 0.6
		(list "D" "observational_error") 0.02
	)
	(call_entity "howso" "set_feature_attributes" (assoc trainee "iris" features feat_attr))

	(print "feature deviations: ")

	(declare (assoc
		params (get (call_entity "howso" "get_internal_parameters" (assoc trainee "iris")) "payload")
	))
	(assign (assoc
		result (get params (list "default_hyperparameter_map" "featureDeviations") )
	))
	(print "If there are no deviations, they remain empty: ")
	(call assert_same (assoc obs result exp (assoc)))

	;set deviations to be residuals
	(call_entity "howso" "set_internal_parameters" (assoc
		trainee "iris"
		default_hyperparameter_map (set (get params "default_hyperparameter_map") "featureDeviations" full_residuals)
	))

	;set the attibutes with user specified errors again
	(call_entity "howso" "set_feature_attributes" (assoc trainee "iris" features feat_attr))
	(assign (assoc
		params (get (call_entity "howso" "get_internal_parameters" (assoc trainee "iris")) "payload")
	))
	(assign (assoc
		result (get params (list "default_hyperparameter_map" "featureDeviations") )
	))


	(assign (assoc result (remove result "E")))
	(print "If deviations exist in hyperparameters, they are updated correctly: ")
	(call assert_approximate (assoc
		obs result
		exp
			(assoc
				"A" .28
				"B" .6 ;should switch to the user specified max value
				"C" .23
				"D" .13 ;should ignore the user value since it's lower
			)
		percent .2
	))
	(call exit_if_failures (assoc msg "Deviations store max values of user input and residuals"))

	(call exit_if_failures (assoc msg unit_test_name ))
)
