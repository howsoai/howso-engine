(seq
	;import the unit_test 'library'
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_dynamic_deviations.amlg" retries 1))

	(declare (assoc
		data (load "unit_test_data/longtail.csv")
	))

	(declare (assoc
		features (first data)
		train_data (tail data)
		result (null)
	))

    (call_entity "howso" "train" (assoc
        features features
		cases train_data
    ))

	(call_entity "howso" "analyze" (assoc
		context_features ["log_price" "noise" "other_1" "other_2" "price"]
		targeted_model "targetless"
		use_deviations (true)
		use_dynamic_deviations (true)
		dynamic_deviations_subtrainee_size 100
		p_values [ 2 ]
		k_values [ 13 ]
	))

	(declare (assoc
		dd_agg_stats
			(get
				(call_entity "howso" "react_aggregate" (assoc
					context_features features
					num_samples 500
					details
						(assoc
							"feature_residuals_full" (true)
						)
				))
				[1 "payload"]
			)
	))


	(print "Price MAE with Dynamic Deviations is as expected: ")
	(call assert_approximate (assoc
		exp 400
		obs (get dd_agg_stats ["feature_residuals_full" "price"])
		thresh 300
	))
	(call exit_if_failures (assoc msg "MAE with DD is not as expected."))

	(declare (assoc
		hps
			(get
				(call_entity "howso" "get_params" (assoc action_feature ""))
				[1 "payload" "hyperparameter_map"]
			)
	))

	(call assert_not_null (assoc
		obs (get hps "subtraineeName")
	))

	(call exit_if_failures (assoc msg unit_test_name ))
)