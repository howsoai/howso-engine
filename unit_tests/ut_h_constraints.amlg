(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_constraints.amlg"))

	(call_entity "howso" "create_trainee" (assoc trainee "model" ))
	(assign_to_entities "howso" (assoc trainee "model"))
	(call_entity "howso" "set_internal_parameters" (assoc
		trainee "model"
		default_hyperparameter_map (assoc "k" 3 "p" 2 "dt" -1)
	))

	(call_entity "howso" "set_feature_attributes" (assoc
		features
			(assoc
				"z"
					(assoc
						"type" "continuous"
						"bounds"
							(assoc
								"min" 0
								"max" 300
								;z should always be bigger then the sum of x and y
								"constraint" "(> #z 0 (+ #x 0 #y 0))"
							)
					)
				"w"
					(assoc
						"type" "nominal"
						;w has to be "B" if z is > 170
						"bounds" (assoc "constraint" "(if (> #z 0 170) \"B\" #w 0)")
					)
			)
	))

	(call_entity "howso" "train" (assoc
		features (list "x" "y" "z" "w")
		input_cases
			(list
				(list "x" "y" "z" "w")
				(list 10 100  120	"A" )
				(list 20 100  150	"A" )
				(list 50 100	180	"B" )
				(list 90 150  270	"B" )
				(list 40 110  160	"A" )
				(list 40 40	100	(null)  )
				(list 30 100 	150	"A"	)
				(list 10 150	170	"B" )
				(list 100 10 120 (null) )
				(list 90 70   170	"A" )
				(list 10 150  170	"A" )
				(list (null) 90 (null) "B" )
				(list (null) 100 110 (null))
				(list (null) 110 200 "B" )
				(list (null) 80  150 "A" )
				(list 20	70(null) "A" )
			)
		session "constraint_testing"
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "batch_react" (assoc
					desired_conviction 5
					action_features features
					generate_new_cases "no"
					num_cases_to_generate 100
				))
				(list "payload" "action_values")
			)
	))



	(call exit_if_failures (assoc msg unit_test_name ))
)
