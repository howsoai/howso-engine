(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_warnings.amlg"))

	(call_entity "howso" "set_feature_attributes" (assoc
		features (assoc "target" (assoc "type" "nominal" "data_type" "number") )
	))

	(declare (assoc
		data (load "unit_test_data/iris.csv")
	))

	(declare (assoc
		features (first data)
		train_data (tail data)
		result (null)
	))

	(call_entity "howso" "train" (assoc
		features features
		input_cases (trunc train_data 30)
		session "default"
	))

	(assign (assoc
		result
			(call_entity "howso" "react_into_features" (assoc
				familiarity_conviction_addition (true)
			))
	))
	(call keep_result_warnings)

	(print "Warning about calling analyze(): ")
	(call assert_same (assoc
		obs (size result)
		exp 2
	))

	(call_entity "howso" "analyze" )

	(assign (assoc
		result
			(call_entity "howso" "react_into_features" (assoc
				familiarity_conviction_addition (true)
			))
	))
	(call keep_result_warnings)

	(print "No warning after analyze is called: ")
	(call assert_null (assoc
		obs result
	))


	(assign (assoc
		result
			(call_entity "howso" "react_into_features" (assoc
				familiarity_conviction_addition (true)
				use_case_weights (true)
			))
	))
	(call keep_result_warnings)

	(print "Warning about calling analyze() with case weights: ")
	(call assert_true (assoc
		obs (= 1 (size result))
	))

	(call exit_if_failures (assoc msg "Warnings for react_into_features()"))


	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				case_indices (list "default" 10)
				preserve_feature_values features
				leave_case_out (true)
				details
					(assoc
						global_case_feature_residual_convictions_full (true)
						local_case_feature_residual_convictions_full (true)
					)
			))
	))
	(call keep_result_warnings)

	(print "No warnings for case feature residuals even before react_aggregate has been called ")
	(call assert_null (assoc
		obs result
	))

	(assign (assoc
		result
			(call_entity "howso" "batch_react" (assoc
				case_indices (list (list "default" 10) (list "default" 11))
				preserve_feature_values (trunc features)
				action_features (list (last features))
				leave_case_out (true)
				details
					(assoc
						global_case_feature_residual_convictions_full (true)
						feature_residuals_robust (true)
					)
				use_case_weights (true)
			))
	))
	(call keep_result_warnings)

	(print "Warning about calling batch_react() for case weights, one warning per batch call: ")
	(call assert_true (assoc
		obs (= 1 (size result))
	))

	(call exit_if_failures (assoc msg "Warnings for batch_react()"))

	(assign (assoc
		result
			(call_entity "howso" "react_aggregate" (assoc
				details (assoc feature_mda_full (true))
				action_feature "target"
			))
	))
	(call keep_result_warnings)

	(print "Warning about calling react_aggregate() with 'target' as action features:")
	(call assert_true (assoc
		obs (= 1 (size result))
	))


	(call_entity "howso" "analyze" (assoc
		action_features (list (last features))
		context_features (trunc features)
	))

	(assign (assoc
		result
			(call_entity "howso" "react_aggregate" (assoc
				details (assoc feature_mda_full (true))
				action_feature "target"
			))
	))
	(call keep_result_warnings)
	(print "No warning about calling analyze() after targeted analysis:")
	(call assert_same (assoc
        exp 0
		obs (size result)
	))

	(print "Errors when specifying untrained features: ")
	(assign (assoc
		result
			(call_entity "howso" "analyze" (assoc
				context_features (list "fake_feature1" "fake_feature2")
				action_features (list "fake_feature3")
			))
	))
	(call keep_result_errors)

	(call assert_same (assoc
		exp "list"
		obs (get_type_string result)
	))
	(call assert_same (assoc
		exp 2
		obs (size result)
	))

	(assign (assoc
		result
			(call_entity "howso" "react" (assoc
				action_features (list "fake_feature3")
				desired_conviction 5.0
			))
	))
	(call keep_result_errors)
	(call assert_same (assoc
		exp "string"
		obs (get_type_string result)
	))

	(assign (assoc
		result
			(call_entity "howso" "batch_react" (assoc
				action_features (list "fake_feature3")
				desired_conviction 5.0
				num_cases_to_generate 20
			))
	))
	(call keep_result_errors)

	(call assert_same (assoc
		exp "string"
		obs (get_type_string result)
	))

	(assign (assoc
		result
			(call_entity "howso" "batch_react" (assoc
				action_features (list "familiarity_conviction_addition")
				desired_conviction 5.0
				num_cases_to_generate 5
			))
	))

	(call assert_same (assoc
		exp 1
		obs (first result)
	))

	(call assert_same (assoc
		exp 5
		obs (size (get result (list 1 "payload" "action_values")))
	))

	(call_entity "howso" "remove_feature" (assoc
		feature "familiarity_conviction_addition"
	))

	(assign (assoc
		result
			(call_entity "howso" "batch_react" (assoc
				action_features (list "familiarity_conviction_addition")
				desired_conviction 5.0
				num_cases_to_generate 5
			))
	))
	(call keep_result_errors)

	(call assert_same (assoc
		exp "string"
		obs (get_type_string result)
	))

	(call exit_if_failures (assoc msg unit_test_name ))
)
