(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_feature_conviction.amlg"))

	(declare (assoc
		data
		(list
			(list 22	3749	1	1	1)
			(list 16	3749 	2	3	3)
			(list 8		3749 	3	5	5)
			(list 68	3749 	4	7.5	7.5)
			(list 83	3749 	5	9	9)
			(list 53	3749 	6	10	10)
			(list 61	3749 	7	11	11)
			(list 44	3749 	8	11.5	11.5)
			(list 33	3749 	9	12	12)
			(list 72	3749 	10	12.2	12.2)
			(list 37	3749 	11	12.2	12.2)
			(list 59	3749 	12	12	12)
			(list 50	3749 	13	11.5	11.5)
			(list 21	3749 	14	11	11)
			(list 93	3749 	15	10	10)
			(list 43	3749 	16	9	9)
			(list 23	3749 	17	7.5	7.5)
			(list 65	3749 	18	5	5)
			(list 44	3749 	19	3	3)
			(list 0		3749 	20	2	2)
			(list 51	3749 	21	1	1)
			(list 55	3749 	22	0.5	0.5)
			(list 95	3749 	23	0.2	0.2)
			(list 52	3749 	24	0	0)
			(list 80	3749 	25	0	0)
			(list 73	3749 	26	0.2	0.2)
			(list 2		3749 	27	0.5	0.5)
			(list 33	3749 	28	1	1)
			(list 52	3749 	29	3	3)
			(list 92	3749 	30	5	5)
			(list 54	3749 	31	7.5	7.5)
			(list 7		3749 	32	9	9)
			(list 50	3749 	33	10	10)
			(list 20	3749 	34	11	11)
			(list 95	3749 	35	11.5	11.5)
			(list 24	3749 	36	12	12)
			(list 95	3749 	37	12.2	12.2)
			(list 35	3749 	38	12.2	12.2)
			(list 36	3749 	39	12	12)
			(list 5		3749 	40	11.5	11.5)
			(list 49	3749 	41	11	11)
			(list 35	3749 	42	10	10)
			(list 96	3749 	43	9	9)
			(list 23	3749 	44	7.5	7.5)
			(list 17	3749 	45	5	5)
			(list 70	3749 	46	3	3)
			(list 10	3749 	47	2	2)
			(list 56	3749 	48	1	1)
		)
	))
	(declare (assoc
		features (list "RANDOM" "STATIC" "z" "w" "v")
	))

	(call_entity "howso" "train" (assoc
		cases data
		features features
		session "session"
	))
	(set_entity_rand_seed "howso" 12345)
	(set_entity_rand_seed "howso" 12345)

	(call_entity "howso" "set_params" (assoc
		default_hyperparameter_map (assoc "k" 1 "p" 2 "dt" -1)
	))

;VALIDATE THE VALUES FOR TARGETED ACCURACY
	(declare (assoc start (system_time) ))
	(declare (assoc
		result
			(call_entity "howso"  "get_feature_conviction" (assoc
				features (list "RANDOM" "STATIC" "w" "v")
				familiarity_conviction_addition (true)
			))
	))
	(call keep_result_payload)
	(declare (assoc time_to_compute (- (system_time) start )))
	(print "Time to compute feature conviction: " time_to_compute "s\n")


	(print "Conviction for features: ")
	(call assert_approximate (assoc
		exp
			(assoc
				"RANDOM" 0.25
				"w" 15
				"v" 15
			)
		obs (remove (get result "familiarity_conviction_addition") "STATIC")
		thresh
			(assoc
				"RANDOM" 0.05
				"w" 1
				"v" 1
			)
		percent 0.1
	))

	;STATIC is super high / infininity
	(call assert_true (assoc
		obs (>= (get result (list "familiarity_conviction_addition" "STATIC")) 1e15)
	))

	(call exit_if_failures (assoc msg "Cached conviction values" ))


	;call analyze to clear out the cached values
	(call_entity "howso" "analyze" (assoc
		bypass_hyperparameter_analysis (true)
		bypass_calculate_feature_residuals (true)
		context_features (list "RANDOM" "STATIC" "w" "v")
	))

	(declare (assoc
		saved_analyze_params
			(call_entity "howso" "debug_label" (assoc label "!savedAnalyzeParameterMap"))
	))

	(call_entity "howso" "auto_analyze")

	(print "analysis parameters saved and used by auto-analyze: ")
	(call assert_same (assoc
		obs (call_entity "howso" "debug_label" (assoc label "!savedAnalyzeParameterMap"))
		exp saved_analyze_params
	))

	(call exit_if_failures (assoc msg unit_test_name ))
)