(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_influential_cases.amlg"))

	(declare (assoc
		data
			(list
				(list 0 0)
				(list 1 1)
				(list 1.1 1.4)
				(list 2.5 3)
				(list 3 3.5)
				(list 3.5 4)
			)
		features (list "x" "y")
	))

	(call_entity "howso" "create_trainee" (assoc trainee "influence"))
	(assign_to_entities "howso" (assoc trainee "influence"))

	(call_entity "howso" "train" (assoc
		input_cases data
		features features
		session "session1"
	))


	(call_entity "howso" "set_internal_parameters" (assoc
		hyperparameter_map
			(assoc
				"y"
					(assoc "x." (assoc "full" (assoc ".none" (assoc "k" 2 "p" 2 "dt" -1))))
			)
		default_hyperparameter_map (assoc "k" 2 "p" 2 "dt" -1)
	))

	(declare (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					context_features (list "x")
					action_features (list "y")
					context_values (list 3)
					details (assoc "similarity_conviction" (true) "influential_cases" (true))
				))
				"payload"
			)
	))

	(print "Influential cases and conviction for exact match:\n" )
	(print "action value: ")
	(call assert_same (assoc exp (list 3.5) obs (get result "action_values")))
	(print "the one exact influential case: ")
	(call assert_same (assoc exp 1 obs (size (get result "influential_cases"))))

	(print "similarity_conviction: " )
	(call assert_approximate (assoc exp 2.44 obs (get result (list "similarity_conviction")) thresh 0.1))

	(call exit_if_failures (assoc msg "Influential cases for exact match" ))



	(print "\nInfluential cases and conviction ignoring exact match via session index:\n" )
	(assign (assoc
		result
			(get
                (call_entity "howso" "react" (assoc
                    context_features (list "x")
                    action_features (list "y")
                    ;exact match on x=3
                    details (assoc "similarity_conviction" (true) "influential_cases" (true))
                    case_indices (list "session1" 4)
                    preserve_feature_values (list "x")
                    leave_case_out (true)
                ))
                "payload"
            )
	))

	(print "action value: ")
	(call assert_same (assoc exp (list 3.5) obs (get result "action_values")))
	(print "two influential cases: ")
	(call assert_same (assoc exp 2 obs (size (get result "influential_cases"))))

	(print "similarity_conviction: " )
	(call assert_approximate (assoc exp 2.06 obs (get result (list "similarity_conviction")) thresh 0.1))
	(print "corresponding influence weight values: \n")
	(call assert_same (assoc exp .5 obs (get result (list "influential_cases" 0 ".influence_weight"))))
	(call assert_same (assoc exp .5 obs (get result (list "influential_cases" 1 ".influence_weight"))))

	(call exit_if_failures (assoc msg "Influential cases ignoring exact match" ))


	(call_entity "howso" "react_into_features" (assoc
		features features
		familiarity_conviction_addition (true)
		similarity_conviction (true)
	))

	(declare (assoc case_ids (contained_entities (list "howso" "influence"))))
	;pull the case id where x,y are 3,3.5:
	(declare (assoc
		case_id
			(first (filter
				(lambda
					(= 3 (retrieve_from_entity (list "howso" "influence" (target_value 1)) "x"))
				)
				case_ids
			))
	))


	(print "\nInfluential cases and conviction ignoring exact match via direct case id:\n" )
	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					context_features (list "x")
					action_features (list "y")
					;exact match on x=3
					context_values (list 3)
					details (assoc "similarity_conviction" (true) "influential_cases" (true))
					ignore_case case_id
				))
				"payload"
			)
	))

	(print "action value: ")
	(call assert_same (assoc exp (list 3.5) obs (get result "action_values")))
	(print "two influential cases: ")
	(call assert_same (assoc exp 2 obs (size (get result "influential_cases"))))

	(print "similarity_conviction: " )
	(call assert_approximate (assoc exp 1.2 obs (get result (list "similarity_conviction")) thresh 0.1))
	(print "corresponding influence weight values: \n")
	(call assert_same (assoc exp .5 obs (get result (list "influential_cases" 0 ".influence_weight"))))
	(call assert_same (assoc exp .5 obs (get result (list "influential_cases" 1 ".influence_weight"))))

	(call exit_if_failures (assoc msg "Influential cases ignoring exact match" ))


	(print "\nInfluential cases and their weights with no exact match:\n" )
	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					context_features (list "x")
					action_features (list "y")
					context_values (list 3.375)
					details (assoc "similarity_conviction" (true) "influential_cases" (true))
					ignore_case (null)
				))
				"payload"
			)
	))
	(print "action value: ")
	(call assert_approximate (assoc exp (list 3.875) obs (get result "action_values") thresh 0.001))
	(print "two influential cases: ")
	(call assert_same (assoc exp 2 obs (size (get result "influential_cases"))))
	(print "corresponding influence weight values: \n")
	(call assert_same (assoc exp .75 obs (get result (list "influential_cases" 0 ".influence_weight"))))
	(call assert_same (assoc exp .25 obs (get result (list "influential_cases" 1 ".influence_weight"))))

	(call exit_if_failures (assoc msg "Influential cases with no exact match" ))


	(call exit_if_failures (assoc msg unit_test_name ))
)