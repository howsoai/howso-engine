(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_derive_custom.amlg"))

	(declare (assoc
		data
			(list
				(list "mike"	"chris"	2000	10 110)
				(list "mike"	"chris"	2200	10 110)
				(list "mike"	"chris"	2400	20 110)
				(list "mike"	"chris"	2600	20 100)
				(list "chris"	"mike"	800		20 200)
				(list "chris"	"mike"	800		24 220)
				(list "chris"	"mike"	800		22 250)
				(list "chris"	"mike"	800		26 300)
				(list "chris"	"mike"	900		30 200)
				(list "chris"	"mike"	900		36 250)
				(list "chris"	"mike"	900		33 300)
				(list "chris"	"joe"	1200	20 200)
				(list "chris"	"joe"	1200	16 180)
				(list "chris"	"joe"	1300	20 100)
				(list "chris"	"joe"	1300	16 120)
				(list "mike"	"joe"	1600	30 150)
				(list "mike"	"joe"	1800	30 110)
				(list "mike"	"joe"	1700	30 140)
				(list "mike"	"joe"	1700	40 130)
				(list "mike"	"joe"	1800	35 100)
			)

		features (list "sender" "reciever" "time" "number" "mult")
		result (null)
	))

    (call_entity "howso" "set_internal_parameters" (assoc
        default_hyperparameter_map (assoc "k" 3 "p" 1 "dt" -1)
    ))

	(call_entity "howso" "set_feature_attributes" (assoc
		features
			(assoc
				"sender" (assoc "type" "nominal" )
				"reciever" (assoc "type" "nominal" )
				"time" (assoc "type" "continuous" "bounds" (assoc "min" 900 "max" 4000 "allow_null" (true)) "derived_feature_code" "(* #mult 0 #number 0")
				"number" (assoc "type" "continuous" "decimal_places"  0 "bounds" (assoc "min"  5.0 "max"  50 "allow_null" (true)))
				"mult" (assoc "type" "continuous" "derived_feature_code" "(* 10 #number 0)")
				".time_delta"
					(assoc
						"type" "continuous"
						"auto_derive_on_train"
							(assoc
								"derive_type" "custom"
								"series_id_features" (list "sender")
								"ordered_by_features" (list "time" )
								"code" "(- #time 0 #time 1)"
							)
						"bounds" (assoc "allow_null" (false))
						"decimal_places" 0
					)
				".custom2"
					(assoc
						"type" "continuous"
						"auto_derive_on_train"
							(assoc
								"derive_type" "custom"
								"series_id_features" (list "sender" "reciever")
								"ordered_by_features" (list "time" "number")
								"code" "(+ (- #time 0 #time 1) #number 0)"
							)

					)
				".custom3"
					(assoc
						"type" "nominal"
						"auto_derive_on_train"
							(assoc
								"derive_type" "custom"
								"series_id_features" (list "sender" "reciever")
								"ordered_by_features" (list "time" "number")
					            ; pick some senders and some recievers.
								"code" "(if (and (< #.session_training_index 10) (< (rand) 0.8)) #sender 0 #reciever 0)"
							)
					)
				".custom4"
					(assoc
						"type" "nominal"
						"auto_derive_on_train"
							(assoc
								"derive_type" "custom"
								"series_id_features" (list "sender" "reciever")
								"ordered_by_features" (list "time" "number")
								"code" "(if (= \"mike\" #sender 0) \"M\" \"C\")"
							)
					)
			)
	))

	(call_entity "howso" "train" (assoc
		input_cases data
		features features
		session "session"
		;derived_features (null)  ;should auto populate
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".session_training_index" ".time_delta" ".custom2")
				))
				(list 1 "payload" "cases")
			)
	))

	(print "Generated Custom features: ")
	(call assert_same (assoc
		obs result
		exp
			[
				[0 200 (null)]
				[1 200 210]
				[2 200 220]
				[3 200 220]
				[4 (null) (null)] ; did not impute time lag to 0
				[5 0 24]
				[6 0 22]
				[7 0 26]
				[8 100 130]
				[9 0 36]
				[10 0 33]
				[11 300 20]
				[12 0 (null)]
				[13 100 20]
				[14 0 116]
				[15 (null) (null)] ; non imputed time_delta
				[16 100 130]
				[17 100 130]
				[18 0 40]
				[19 0 35]
			]
	))

	(call exit_if_failures (assoc msg "Deriving on train and imputing time_delta nulls" ))

	(assign (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".custom3")
				))
				(list 1 "payload" "cases")
			)
	))

	; should have chosen senders and recievers
	(print "Derived complex nominal: ")
	(call assert_same (assoc
		obs (zip (apply "append" result))
		exp (zip (list "mike" "chris" "joe"))
	))


	(assign (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".custom4")
				))
				(list 1 "payload" "cases")
			)
	))

	; should have chosen senders and recievers
	(print "Derived complex nominal with literals: ")
	(call assert_same (assoc
		obs (apply "append" result)
		exp (list "M" "M" "M" "M" "C" "C" "C" "C" "C" "C" "C" "C" "C" "C" "C" "M" "M" "M" "M" "M")
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					context_features (list "sender" "number" "mult")
					context_values (list "mike" 17 100)
					derived_context_features (list "time")
					action_features (list "reciever")
				))
				(list 1 "payload" "action_values")
			)
	))

	(print "Computed derived context feature: ")
	; should be joe because time gets computed to 100*17 = 1700, and mike 1700 100 is closest to joe
	(call assert_same (assoc obs result exp (list "joe")))


    (assign (assoc
        result
            (get
                (call_entity "howso" "react" (assoc
                    context_features (list "sender" "number" )
                    context_values (list "mike" 10)
                    derived_context_features (list "time")
                    action_features (list "reciever")
                ))
				(list 1 "payload" "action_values")
            )
    ))
    (print "Computed invalid derived context feature: ")
    ; should be "chris"  because time gets computed to (null) since 'mult' isn't specified in contexts, and mike 10 has reciever of chris
    (call assert_same (assoc obs result exp (list "chris")))


    (assign (assoc
        result
			(call_entity "howso" "react" (assoc
				context_features (list "sender" "number" )
				context_values (list "mike" 12)
				derived_action_features (list "mult")
				action_features (list "reciever" "mult")
			))
    ))
	(call keep_result_payload)
	(print "Computed derived action feature: ")
    ; should be "chris", see react above. mult should be 120 because it's 10 * 12, per the definition for 'mult' feature
    (call assert_same (assoc obs (get result "action_values") exp (list "chris" 120)))

	(print "Derived action features included in react action_features: ")
	(call assert_same (assoc obs (get result "action_features") exp (list "reciever" "mult") ))

	(call exit_if_failures (assoc msg unit_test_name ))
)
