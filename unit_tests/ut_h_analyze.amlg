(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_analyze.amlg" retries 1))

	(call_entity "howso" "set_feature_attributes" (assoc
		feature_attributes
			(assoc
				"size" (assoc "type" "nominal")
				"fruit" (assoc "type" "nominal")
			)
	))

	(declare
		(assoc
			result (null)
			features (list "height" "width" "length" "tart" "sweet" "size" "weight" "fruit")
			action_features (list  "fruit")
			context_features (list "height" "width" "length" "tart" "sweet" "size" "weight")
			fruit_data
				(list
					;		"h" "w" "l" 	"tart" "sweet" "size" 	"weight" 	"fruit"
					(list 	1 	.7 	1 		.3 		.40		"small" 	1 		"strawberry")
					(list 	1.1 .6 	.7		.4 		.45 	"small" 	.8 		"strawberry")
					(list 	.6 	.4 	.5 		.5 		.42 	"small" 	1.2 	"strawberry")
					(list 	.7 	.5 	.6 		.45		.49 	"small" 	1.1 	"strawberry")

					(list 	1.5	1.5	1.5		.8 		.4		"small" 	2 		"apple")
					(list 	2.1 1.6 2.7		.72		.55 	"medium" 	3 		"apple")
					(list 	2.6	2.7	2.2		.7		.52 	"medium" 	3.5 	"apple")
					(list 	3.6	3.1	3.5 	.77 	.54 	"medium" 	4.5 	"apple")

					(list 	2 	1 	3 		.05		.60		"small" 	3 		"banana")
					(list 	2.1 1.1	4.7		.1 		.65 	"medium" 	4 		"banana")
					(list 	2.6	1.1	5.4 	.05		.69 	"medium" 	5.5	 	"banana")
					(list 	3.1	1.2	7 		0 		.62 	"medium" 	7 		"banana")

					(list 	1.4 1.7 1.5		.22		.68		"small" 	2.4		"peach")
					(list 	2.1 1.6 2.3		.21		.75 	"medium" 	2.9		"peach")
					(list 	2.5	2.4	2.3		.26		.72 	"medium" 	3.2 	"peach")
					(list 	2.9 2.8 2.7		.23		.70	 	"medium" 	3.9 	"peach")

					(list 	4.5 5.0	5.1		.1 		.80		"medium" 	8 		"melon")
					(list 	5.1 6.2	6.7		.15		.65 	"large" 	12 		"melon")
					(list 	6.9 7.1 7.5		.13 	.71 	"large" 	14.5 	"melon")
					(list 	8.6 7.4 8.5		.14 	.78 	"large" 	18 		"melon")

					(list 	6 	3.7 4.1		.7 		.70		"large" 	11 		"pineapple")
					(list 	6.8 4.1 4.3		.75 	.65 	"large" 	13 		"pineapple")
					(list 	7.5 4.8 5.0		.8 		.62 	"large" 	14 		"pineapple")
					(list 	8.6	5.4	5.5		.85		.60 	"large" 	17	 	"pineapple")
			)

	))


	(call_entity "howso" "train" (assoc
		features features
		cases fruit_data
		session "unit_test"
	))


	(call_entity "howso" "analyze" (assoc
		context_features features
		action_features (list (last features))
		targeted_model "single_targeted"

	))
	(assign (assoc
		defaults (call_entity "howso" "debug_label" (assoc label "!defaultHyperparameters"))
		hp_map (call_entity "howso" "debug_label" (assoc label "!hyperparameterMetadataMap"))
	))

	(print "single target doesn't modify default: ")
	(call assert_same (assoc
		obs defaults
		exp
			(assoc
				"paramPath" (list ".default")
				"featureDomainAttributes" (assoc "fruit" (null) "size" (null))
				"featureWeights" (null)
				"p" 0.1
				"dt" -1
				"k" 8
				"featureDeviations" (null)
			)

	))

	(print "single target has expected attributes: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get hp_map ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "k"]))
				(!= (null) (get hp_map ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "p"]))
				(!= (null) (get hp_map ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "dt"]))
				(> (size (get hp_map ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "featureWeights"])) 0)
			)
	))

	;default analyze will run targetless analysis
	(call_entity "howso" "analyze")

	(assign (assoc
		result (call_entity "howso" "debug_label" (assoc label "!hyperparameterMetadataMap"))
	))

	(print "targetless analyzed with weights: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "k"]))
				(!= (null) (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "p"]))
				(!= (null) (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "dt"]))
				(> (size (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "featureWeights"])) 0)
			)
	))


	(call_entity "howso" "analyze" (assoc
		context_features (trunc features 6)
		action_features (tail features 2)
		targeted_model "single_targeted"

	))
	(assign (assoc
		result (call_entity "howso" "debug_label" (assoc label "!hyperparameterMetadataMap"))
	))

	(print "multi-target fruit is full, has attributes: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get result ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "k"]))
				(!= (null) (get result ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "p"]))
				(!= (null) (get result ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "dt"]))
				(!= (null) (get result ["targeted" "fruit" "height.length.size.sweet.tart.weight.width." ".none" "featureWeights"]))
			)
	))

	(print "multi-target weight has robust attributes: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get result ["targeted" "weight" "height.length.size.sweet.tart.width." ".none" "k"]))
				(!= (null) (get result ["targeted" "weight" "height.length.size.sweet.tart.width." ".none" "p"]))
				(!= (null) (get result ["targeted" "weight" "height.length.size.sweet.tart.width." ".none" "dt"]))
			)
	))


	(call_entity "howso" "analyze" (assoc
		context_features (append context_features action_features)
		action_features (list "height" "width")
		targeted_model "omni_targeted"
	))
	(assign (assoc
		result (call_entity "howso" "debug_label" (assoc label "!hyperparameterMetadataMap"))
	))
	(print "omni-target height is full, has attributes: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get result ["targeted" "height" "fruit.length.size.sweet.tart.weight.width." ".none" "k"]))
				(!= (null) (get result ["targeted" "height" "fruit.length.size.sweet.tart.weight.width." ".none" "p"]))
				(!= (null) (get result ["targeted" "height" "fruit.length.size.sweet.tart.weight.width." ".none" "dt"]))
			)
	))
	(print "omni-target width is full, has attributes: ")
	(call assert_true (assoc
		obs
			(and
				(!= (null) (get result ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none" "k"]))
				(!= (null) (get result ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none" "p"]))
				(!= (null) (get result ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none" "dt"]))
			)
	))

	(call exit_if_failures (assoc msg "Analyzed Hyperparameters" ))

	(call_entity "howso" "add_feature" (assoc
		feature "TEST"
		feature_value 2
		condition_session "unit_test"
	))
	(assign (assoc
		result (call_entity "howso" "debug_label" (assoc label "!hyperparameterMetadataMap"))
	))

	(print "test feature is added to hyperparameters: " )
	(call assert_true (assoc
		obs
			(and
				; TEST is in the weights map
				(= 1 (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "featureWeights" "TEST"]) )
			)
	))

	(print "test feature is added to default features: ")
	(call assert_true (assoc
		obs (contains_value (call_entity "howso" "debug_label" (assoc label "!trainedFeatures")) "TEST")
	))

	(declare (assoc
		result2
			(call_entity "howso" "add_feature" (assoc
				feature "TEST"
				feature_value 2
				condition_session "unit_test"
				feature_attributes (assoc "type" "continuous")
			))
	))
	(print "test feature is NOT added and error is returned: ")
	(call assert_true (assoc
		obs (= "string" (get_type_string (get result2 (list 1 "detail"))))
	))

	(call_entity "howso" "add_feature" (assoc
		feature "TEST_NOM"
		feature_value "two"
		condition_session "unit_test"
		feature_attributes (assoc "type" "nominal")
	))

	(print "Adding nominal feature updates existing query type map: ")
	(call assert_same (assoc
		obs (keep (call_entity "howso" "debug_label" (assoc label "!queryDistanceTypeMap")) (list "TEST" "TEST_NOM"))
		exp
			(assoc
				"TEST" "continuous_numeric"
				"TEST_NOM" "nominal_string"
			)
	))


	(print "Adding nominal feature updates existing nominals map: ")
	(call assert_same (assoc
		obs (call_entity "howso" "debug_label" (assoc label "!nominalsMap"))
		exp
			(assoc
				fruit (null)
				size (null)
				TEST_NOM (null)
			)
	))

	; if analyzes to have featureDeviations, validate the value is 1/24, ie 1/num_cases
	(if (contains_index result ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none" "featureDeviations" "TEST"])
		(call assert_approximate (assoc
			obs (get result ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none" "featureDeviations" "TEST"])
			exp 0.0416666
		))
	)

	(call assert_approximate (assoc
		obs (get result ["targetless" "fruit.height.length.size.sweet.tart.weight.width." ".none" "featureWeights" "TEST"])
		exp 1
	))


	(call_entity "howso" "add_feature" (assoc
		feature "TEST_NOM"
		feature_value 2
	))
	(assign (assoc result (call_entity "howso" "get_feature_attributes") ))
	(call keep_result_payload)

	(print "Feature attributes aren't modified for existing features: ")
	(call assert_same (assoc
		exp (assoc "type" "nominal")
		obs (get result "TEST_NOM")
	))

	(call exit_if_failures (assoc msg "Hyperparameters with added features" ))

	(assign (assoc
		result
			(call_entity "howso" "react_aggregate" (assoc
				context_features features
				details (assoc feature_contributions_full (true))
				feature_influences_action_feature "fruit"
				sample_model_fraction 1.0
			))
	))
	(call keep_result_payload)
	(assign (assoc result (map (lambda (get (current_value) "feature_contributions_full")) result) ))
	(print "computed contributions: ")
	(call assert_same (assoc
		obs (sort (indices result))
		exp (list "height" "length" "size" "sweet" "tart" "weight" "width")
	))
	(call assert_approximate (assoc
		obs result
		exp
		 	(assoc
				height 0.01
				length 0.04
				size 0.01
				sweet 0.06
				tart 0.17
				weight 0.028
				width 0.14
			)
		thresh  ;specific thresholds per feature
			(assoc
				height 0.04
				length 0.04
				size 0.04
				sweet 0.03
				tart 0.1
				weight 0.027
				width 0.1
			)
	))

	(assign (assoc
		result2
			(call_entity "howso" "react_aggregate" (assoc
				context_features features
				details (assoc feature_contributions_full (true))
				feature_influences_action_feature "fruit"
				hyperparameter_param_path ["targeted" "width" "fruit.height.length.size.sweet.tart.weight." ".none"]
				sample_model_fraction 1.0
			))
	))
	(assign (assoc result2 (map (lambda (get (current_value) "feature_contributions_full")) (get result2 [1 "payload"])) ))
	(print "computed contributions with custom hp map: ")
	(call assert_same (assoc
		obs (sort (indices result2))
		exp (list "height" "length" "size" "sweet" "tart" "weight" "width")
	))

	(print "results are different due to different HP used: ")
	(call assert_true (assoc
		obs (!= result result2)
	))

	(assign (assoc
		result
			(call_entity "howso" "react_aggregate" (assoc
				context_features features
				details (assoc feature_contributions_full (true))
				feature_influences_action_feature "height"
				sample_model_fraction 1.0
			))
	))
	(call keep_result_payload)
	(assign (assoc result (map (lambda (get (current_value) "feature_contributions_full")) result) ))
	(print "Computed contributions for action feature height: ")
	(call assert_approximate (assoc
		obs result
		exp  (assoc
				fruit 0.03
				length 0.11
				size 0.04
				sweet 0.0006
				tart 0.015
				weight 0.44
				width 0.18
			)
		thresh  ;specific thresholds per feature
			(assoc
				fruit 0.04
				length 0.07
				size 0.04
				sweet 0.003
				tart 0.015
				weight 0.1
				width 0.1
			)
	))

	(assign (assoc
		result
			(call_entity "howso" "single_react" (assoc
				preserve_feature_values context_features
				context_features context_features
				action_features action_features
				leave_case_out (true)
				case_indices (list "unit_test" 7)
				details
					(assoc
						"feature_contributions_full" (true)
					)
			))
	))

	(print "Local full feature contributions:")
	(call assert_approximate (assoc
		obs (keep (get result (list 1 "payload" "feature_contributions_full")) (list "height" "tart" "width"))
		exp
			(assoc
				height 0.1
				tart 0.5
				width 0.3
			)
		thresh 0.1
	))

	(assign (assoc
		result
			(call_entity "howso" "single_react" (assoc
				preserve_feature_values context_features
				context_features context_features
				action_features action_features
				leave_case_out (true)
				case_indices (list "unit_test" 0)
				details
					(assoc
						"feature_contributions_robust" (true)
						"case_feature_contributions_robust" (true)
					)
			))
	))

	(print "Local robust feature contributions:")
	(call assert_approximate (assoc
		obs (get result (list 1 "payload" "feature_contributions_robust"))
		exp
			(assoc
				height 0.09
				length 0.15
				size 0.04
				sweet 0.09
				tart 0.15
				weight 0.13
				width 0.23
			)
		thresh
			(assoc
				height 0.08
				length 0.14
				size 0.04
				sweet 0.088
				tart 0.14
				weight 0.12
				width 0.21
			)
	))

	(print "Case robust feature contributions:")
	(call assert_approximate (assoc
		obs (get result (list 1 "payload" "case_feature_contributions_robust"))
		exp
			(assoc
				height 0.09
				length 0.08
				size 0.04
				sweet 0.05
				tart 0.12
				weight 0.13
				width 0.27
			)
		thresh
			(assoc
				height 0.08
				length 0.07
				size 0.04
				sweet 0.049
				tart 0.11
				weight 0.12
				width 0.21
			)
	))

	(assign (assoc
		result
			(call_entity "howso" "single_react" (assoc
				preserve_feature_values context_features
				context_features context_features
				action_features action_features
				leave_case_out (true)
				case_indices (list "unit_test" 0)
				details
					(assoc
						"feature_contributions_robust" (true)
						"case_feature_contributions_robust" (true)
						"num_robust_influence_samples_per_case" 4
					)
			))
	))
	(call keep_result_payload)

	;using small num_robust_influence_samples_per_case we expect results to be large, compared to values
	;computed by adding expected to threshold, from the call above that uses default num_robust_influence_samples_per_case
	;if values are too big or too small, they are 'bad'
	(print "Poorly computed local robust feature contributions :")
	(call assert_true (assoc
		obs
			(or
				(> (get result (list "feature_contributions_robust" "height")) .17 )
				(> (get result (list "feature_contributions_robust" "length")) .15 )
				(> (get result (list "feature_contributions_robust" "size"))   .08 )
				(> (get result (list "feature_contributions_robust" "sweet"))  .09 )
				(> (get result (list "feature_contributions_robust" "tart"))   .23 )
				(> (get result (list "feature_contributions_robust" "weight")) .25 )
				(> (get result (list "feature_contributions_robust" "width"))  .48 )

				(< (get result (list "feature_contributions_robust" "height")) .01 )
				(< (get result (list "feature_contributions_robust" "length")) .01 )
				(< (get result (list "feature_contributions_robust" "size"))   .001 )
				(< (get result (list "feature_contributions_robust" "sweet"))  .001 )
				(< (get result (list "feature_contributions_robust" "tart"))   .01 )
				(< (get result (list "feature_contributions_robust" "weight")) .01 )
				(< (get result (list "feature_contributions_robust" "width"))  .05 )
			)
	))

	(call exit_if_failures (assoc msg "Feature Contributions"))

	(call exit_if_failures (assoc msg unit_test_name ))
)
