(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_case_generation_preserving.amlg"))

	(call_entity "howso" "set_internal_parameters" (assoc
		default_hyperparameter_map (assoc "k" 3 "p" 2 "dt" -1)
	))

	(call_entity "howso" "set_feature_attributes" (assoc
		features (assoc "b" (assoc "type" "nominal") )
	))

	(call_entity "howso" "train" (assoc
		features (list "id" "a" "b")
		input_cases
			(list
				(list 0  2 "a")
				(list 10 2 "b")
				(list 20 2 "c")
				(list 30 4 (null))
				(list 40 4 "e")
				(list 50 (null) "a")
				(list 60 (null) "b")
				(list 70 5 "c")
				(list 80 5 "d")
				(list 90 6 "e")
			)
		session "id_testing"
	))

	(call_entity "howso" "train" (assoc
		features (list "id" "a" "b")
		input_cases
			(list
				(list 1 1 "a")
				(list 2 1 "b")
				(list 3 1 "c")
				(list 4 2 "a")
			)
		session "id_testing2"
	))


	(declare (assoc
		result (call_entity "howso" "get_session_indices" (assoc session "id_testing2"))
		valid_ids (list 0 1 2 3 4 10 20 30 40 50 60 70 80 90)
	))
	(print "session indices: ")
	(call assert_same (assoc obs (get result (list 1 "payload")) exp (list 0 1 2 3)))


	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					desired_conviction 1
					action_features (list "id" "a" "b")
					preserve_feature_values (list "id")
				))
				(list 1 "payload" "action_values")
			)
	))
	(print "preserve feature value on random case: ")
	(call assert_true (assoc obs (contains_value valid_ids (get result 0))))


	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					desired_conviction 1
					action_features (list "id" "a" "b")
					case_indices (list "id_testing" 1)
					preserve_feature_values (list "id")
				))
				(list 1 "payload" "action_values")
			)
	))
	(print "preserve feature value one feature given specific id: ")
	(call assert_same (assoc obs (get result "id") exp 10))

	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					desired_conviction 1
					action_features (list "id" "a" "b")
					case_indices (list "id_testing2" 2)
					preserve_feature_values (list "id" "a")
				))
				(list 1 "payload" "action_values")
			)
	))
	(print "preserve feature values for two features given specific id\n")
	(print "preserved id: ") (call assert_same (assoc obs (get result 0) exp 3))
	(print "preserved a: ")(call assert_same (assoc obs (get result 1) exp 1))


	;x is not a context value that's in the dataset
	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					desired_conviction 1
					action_features (list "id" "a" "b")
					context_features (list "b" )
					context_values (list  "x")
				))
				(list 1 "payload" "action_values")
			)
	))
	(print "conditioning non-existing value generates the passed in context: ")
	(call assert_same (assoc exp "x" obs (get result 2)))


	(call exit_if_failures (assoc msg unit_test_name ))
)
