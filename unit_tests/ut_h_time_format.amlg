(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_time_format.amlg"))

	(declare (assoc
		data
			[
				[1 100 "a" "01:00:00"]
				[2 100 "a" "02:00:00"]
				[3 100 "a" "03:00:00"]
				[4 200 "a" "04:00:00"]
				[5 200 "a" "05:00:00"]
				[6 200 "a" "06:00:00"]
				[7 300 "b" "07:00:00"]
				[8 300 "b" "08:30:00"]
				[9 300 "b" "09:00:00"]
				[10 400 "b" "11:00:00"]
				[11 400 "b" "17:00:00"]
				[12 400 "b" "18:00:00"]
			]
	))
	(declare (assoc
		features (list "id" "val" "nom" "time")
	))

	(call_entity "howso" "set_params" (assoc
		default_hyperparameter_map (assoc "k" 2 "p" 2 "dt" -1)
	))

	(call_entity "howso" "set_feature_attributes" (assoc
		feature_attributes
			(assoc
				"id"  (assoc "type" "continuous")
				"val" (assoc "type" "continuous" )
				"nom" (assoc "type" "nominal")
				"time"
					(assoc
						"type" "continuous"
						;should be set automatically
						;"date_time_format" "%H.%M.%S"
						"data_type" "formatted_time"
						"decimal_places" 0
					)
			)
	))

	(assign (assoc result (call_entity "howso" "get_feature_attributes") ))
	(call keep_result_payload)

	(print "time data_time_format automatically set: ")
	(call assert_same (assoc
		exp "%H:%M:%S"
		obs (get result ["time" "date_time_format"])
	))

	(call_entity "howso" "train" (assoc
		cases data
		features features
		session "session"
	))

	(assign (assoc
		result
			(get
				(call_entity "howso" "single_react" (assoc
					context_features (list "id" "nom")
					context_values (list 3.5 "a")
					action_features (list "time")

				))
				(list 1 "payload" "action_values")
			)
	))
	(print "React outputs correct time: ")
	(call assert_same (assoc obs (first result) exp "03:30:00"))

	(assign (assoc
		result
			(get
				(call_entity "howso" "single_react" (assoc
					context_features (list "nom" "time")
					context_values (list "a" "04:30:00")
					action_features (list "id")
				))
				(list 1 "payload" "action_values")
			)
	))
	(print "Using time as context in react: ")
	(call assert_same (assoc obs (first result) exp 4.5))

	(call exit_if_failures (assoc msg "Time as context." ))

	(assign (assoc
		result
			(call_entity "howso" "get_cases" (assoc features features))
	))
	(declare (assoc
		all_times
			(map
				(lambda (get (current_value) 3) )
				(get result  (list 1 "payload" "cases"))
			)
		orig_times
			 (map
				(lambda (get (current_value) 3))
				data
			 )
	))

	(print "Original times output in retrieve cases: ")
	(call assert_same (assoc
		obs all_times
		exp orig_times
		unordered (true)
	))

	(call exit_if_failures (assoc msg "Original time in retrieve cases." ))


	(print "time format in generate case: ")
	(assign (assoc
		result
			(get
				(call_entity "howso" "single_react" (assoc
					desired_conviction 10
					action_features (list "val" "nom" "time")
					ordered_by_specified_features (true)
					context_features (list "id")
					context_values (list 4)
				))
				;grab the time string
				[1 "payload" "action_values" 2]
			)
	))

	;convert generated time back to epoch
	(declare (assoc
		epoch_value (format result "time:%H:%M:%S" "number")
	))

	;since conditioned id was 4, 04:00:00 is 14400 seconds, value should be +/- 1.5 hours of that
	(print result " = " epoch_value ": ")
	(call assert_approximate (assoc
		obs 14400
		exp epoch_value
		thresh 5400
	))

	(call exit_if_failures (assoc msg unit_test_name ))
)