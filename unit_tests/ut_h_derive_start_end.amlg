(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_derive_start_end.amlg"))

	(declare (assoc
		data
			(list
				(list "mike" 1000 	20 "blue")
				(list "chris" 2000	20 "blue")
				(list "mike" 2000	20 "blue")
				(list "chris" 1100 	20 "red")
				(list "mike" 3400 	30 "red")
				(list "mike" 3900 	30 "yellow")
				(list "chris" 1000 	25 "yellow")
				(list "chris" 1900 	32 "blue")
				(list "chris" 1300 	34 "green")
				(list "chris" 1200 	36 "blue")
				(list "mike" 1600 	20 "green")
				(list "jacob" 1000 	10 "blue" )
				(list "jacob" 1200 	11 "blue" )
				(list "jacob" 1700 	12 "green" )
			)

		features (list "name" "time" "pts" "color")
	))

	(call_entity "howso" "set_feature_attributes" (assoc
		features
			(assoc
				"name" (assoc "type" "nominal" "id_feature" (true) )
				"time"
					(assoc
						"type" "continuous"
						"bounds" (assoc "min" 900 "max" 4000 "allow_null" (true))
						"time_series" (assoc "time_feature" (true) "type" "delta")
					)
				"pts"
					(assoc
						"type" "continuous"
						"decimal_places"  0
						"bounds" (assoc "min"  10.0 "max"  40 "allow_null" (true))
						"time_series" (assoc "type" "delta")
					)
				"color" (assoc "type" "nominal" )
			)
	))

	(call_entity "howso" "train" (assoc
		input_cases data
		features features
		session "session"
		;derived_features (null)  ;should auto populate
	))

	(declare (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".session_training_index" ".series_progress" ".series_progress_delta")
					; guarantee output order of cases is same as it was trained
					session "session"
				))
				(list "payload" "cases")
			)
	))

	(print "\nmike start, index 0:\n")
	(call assert_same (assoc exp 0 obs (get result (list 0 1))))
	(call assert_same (assoc exp 0.25 obs (get result (list 0 2))))

	(print "\nchris end, index 1:\n")
	(call assert_same (assoc exp 1 obs (get result (list 1 1))))
	(call assert_same (assoc exp 0.1 obs (get result (list 1 2))))

	(print "\nchris start, index 6:\n")
	(call assert_same (assoc exp 0 obs (get result (list 6 1))))
	(call assert_same (assoc exp 0.2 obs (get result (list 6 2))))

	(print "\nmike end, index 5:\n")
	(call assert_same (assoc exp 1 obs (get result (list 5 1))))
	(call assert_approximate (assoc exp 0.1724 obs (get result (list 5 2))))

	(print "\njacob start, index 11:\n")
	(call assert_same (assoc exp 0 obs (get result (list 11 1))))
	(call assert_same (assoc exp 0.5 obs (get result (list 11 2))))

	(print "\njacob middle:\n")
	(call assert_approximate (assoc exp 0.2857 obs (get result (list 12 1))))
	(call assert_approximate (assoc exp 0.2857 obs (get result (list 12 2))))

	(print "\njacob end, index 13:\n")
	(call assert_same (assoc exp 1 obs (get result (list 13 1))))
	(call assert_approximate (assoc exp 0.7143 obs (get result (list 13 2))))


	(call exit_if_failures (assoc msg "Derived time series progress and delta features" ))



	;get a case pre-removal
	(assign (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".session_training_index" "name" "time" ".series_progress" ".series_progress_delta" ".time_lag_1" ".time_delta_1")
					case_indices (list (list "session" 4))
				))
				(list "payload" "cases")
			)
	))
	(declare (assoc
		mike_case_4
			(zip
				(list ".session_training_index" "name" "time" ".series_progress" ".series_progress_delta" ".time_lag_1" ".time_delta_1")
				(first result)
			)
	))

	(print "Validate case derived features are updated correctly: ")
	(call assert_approximate (assoc
		obs mike_case_4
		exp
			(assoc
				".series_progress" 0.8275862068965517
				".series_progress_delta" 0.4827586206896552
				".session_training_index" 4
				".time_delta_1" 1400
				".time_lag_1" 2000
				"name" "mike"
				"time" 3400
			)
	))

	;remove a case
	(assign (assoc
		result
			(get
				(call_entity "howso" "remove_cases" (assoc
					condition (assoc ".session_training_index" 2)
				))
				"payload"
			)
	))

	(print "Removed one case from 'mike' series: ")
	(call assert_same (assoc
		exp 1
		obs (get result "count")
	))


	;get the earlier case and check that its derived values are updated
	(assign (assoc
		result
			(get
				(call_entity "howso" "get_cases" (assoc
					features (list ".session_training_index" "name" "time" ".series_progress" ".series_progress_delta" ".time_lag_1" ".time_delta_1")
					case_indices (list (list "session" 4))
				))
				(list "payload" "cases")
			)
	))
	(declare (assoc
		mike_case_3
			(zip
				(list ".session_training_index" "name" "time" ".series_progress" ".series_progress_delta" ".time_lag_1" ".time_delta_1")
				(first result)
			)
	))

	(print "Validate case derived features are updated correctly: ")
	(call assert_approximate (assoc
		obs mike_case_3
		exp
			(assoc
				".series_progress" 0.8275862068965517
				".series_progress_delta" 0.6206896551724138
				".session_training_index" 4
				".time_delta_1" 1800
				".time_lag_1" 1600
				"name" "mike"
				"time" 3400
			)
	))
	(call exit_if_failures (assoc msg "Re-derived features correctly after case removal."))

	(call exit_if_failures (assoc msg unit_test_name ))
)