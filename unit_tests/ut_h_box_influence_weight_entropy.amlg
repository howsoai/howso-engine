(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_box_influence_weight_entropy.amlg"))

	(call_entity "howso" "create_trainee" (assoc trainee "test" ))
	(assign_to_entities "howso" (assoc trainee "test"))


	(declare (assoc
		model_data
			(list
				(list "x" "y")
				(list 0 0)
				(list 0 1)
				(list 1 0)
				(list 2 1)
			)

	))
	(declare (assoc
		data (tail model_data)
		features (first model_data)
	))

	(call_entity "howso" "train" (assoc
		input_cases data
		features features
		session "session1"
	))

	(call_entity "howso" "set_internal_parameters" (assoc
		default_hyperparameter_map (assoc "k" 2 "p" 2 "dt" -1)
	))

	(call_entity "howso" "react_into_features" (assoc
		features features
		influence_weight_entropy (true)
	))
	(declare (assoc
		result
			(call_entity "howso" "get_cases" (assoc features (append features "influence_weight_entropy")))
	))

	(declare (assoc
		expected_map
			(assoc
				"01" 0.6783
				"10" 0.6783
				"21" 0.6783
				"00" 0.6931
			)
	))

	(print "computed cases influence weight entropies:\n")

	(map
		(lambda
			(let
				(assoc
					x (get (current_value 1) 0)
					y (get (current_value 1) 1)
					conv (get (current_value 1) 2)
				)

				(print x "," y ": " conv " expected: " (get expected_map (concat x y)) " match: ")
				(call assert_approximate (assoc percent 0.001 obs conv exp (get expected_map (concat x y))))


			)
		)
		(get result (list "payload" "cases"))
	)
	(call exit_if_failures (assoc msg unit_test_name ))
)


