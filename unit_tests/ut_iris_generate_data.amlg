 (seq
	;import the unit_test library
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_iris_generate_data.amlg"))

	(declare (assoc
		training_data
			(list
				(list 6.4 2.8 5.6 2.2 "virginica")
				(list 5.0 2.3 3.3 1.0 "versicolor")
				(list 4.9 2.5 4.5 1.7 "virginica")
				(list 4.9 3.1 1.5 0.1 "setosa")
				(list 5.7 3.8 1.7 0.3 "setosa")
				(list 4.4 3.2 1.3 0.2 "setosa")
				(list 5.4 3.4 1.5 0.4 "setosa")
				(list 6.9 3.1 5.1 2.3 "virginica")
				(list 6.7 3.1 4.4 1.4 "versicolor")
				(list 5.1 3.7 1.5 0.4 "setosa")
				(list 5.2 2.7 3.9 1.4 "versicolor")
				(list 6.9 3.1 4.9 1.5 "versicolor")
				(list 5.8 4.0 1.2 0.2 "setosa")
				(list 5.4 3.9 1.7 0.4 "setosa")
				(list 7.7 3.8 6.7 2.2 "virginica")
				(list 6.3 3.3 4.7 1.6 "versicolor")
				(list 6.8 3.2 5.9 2.3 "virginica")
				(list 7.6 3.0 6.6 2.1 "virginica")
				(list 6.4 3.2 5.3 2.3 "virginica")
				(list 5.7 4.4 1.5 0.4 "setosa")
				(list 6.7 3.3 5.7 2.1 "virginica")
				(list 6.4 2.8 5.6 2.1 "virginica")
				(list 5.4 3.9 1.3 0.4 "setosa")
				(list 6.1 2.6 5.6 1.4 "virginica")
				(list 7.2 3.0 5.8 1.6 "virginica")
				(list 5.2 3.5 1.5 0.2 "setosa")
				(list 5.8 2.6 4.0 1.2 "versicolor")
				(list 5.9 3.0 5.1 1.8 "virginica")
				(list 5.4 3.0 4.5 1.5 "versicolor")
				(list 6.7 3.0 5.0 1.7 "versicolor")
				(list 6.3 2.3 4.4 1.3 "versicolor")
				(list 5.1 2.5 3.0 1.1 "versicolor")
				(list 6.4 3.2 4.5 1.5 "versicolor")
				(list 6.8 3.0 5.5 2.1 "virginica")
				(list 6.2 2.8 4.8 1.8 "virginica")
				(list 6.9 3.2 5.7 2.3 "virginica")
				(list 6.5 3.2 5.1 2.0 "virginica")
				(list 5.8 2.8 5.1 2.4 "virginica")
				(list 5.1 3.8 1.5 0.3 "setosa")
				(list 4.8 3.0 1.4 0.3 "setosa")
				(list 7.9 3.8 6.4 2.0 "virginica")
				(list 5.8 2.7 5.1 1.9 "virginica")
				(list 6.7 3.0 5.2 2.3 "virginica")
				(list 5.1 3.8 1.9 0.4 "setosa")
				(list 4.7 3.2 1.6 0.2 "setosa")
				(list 6.0 2.2 5.0 1.5 "virginica")
				(list 4.8 3.4 1.6 0.2 "setosa")
				(list 7.7 2.6 6.9 2.3 "virginica")
				(list 4.6 3.6 1.0 0.2 "setosa")
				(list 7.2 3.2 6.0 1.8 "virginica")
				(list 5.0 3.3 1.4 0.2 "setosa")
				(list 6.6 3.0 4.4 1.4 "versicolor")
				(list 6.1 2.8 4.0 1.3 "versicolor")
				(list 5.0 3.2 1.2 0.2 "setosa")
				(list 7.0 3.2 4.7 1.4 "versicolor")
				(list 6.0 3.0 4.8 1.8 "virginica")
				(list 7.4 2.8 6.1 1.9 "virginica")
				(list 5.8 2.7 5.1 1.9 "virginica")
				(list 6.2 3.4 5.4 2.3 "virginica")
				(list 5.0 2.0 3.5 1.0 "versicolor")
				(list 5.6 2.5 3.9 1.1 "versicolor")
				(list 6.7 3.1 5.6 2.4 "virginica")
				(list 6.3 2.5 5.0 1.9 "virginica")
				(list 6.4 3.1 5.5 1.8 "virginica")
				(list 6.2 2.2 4.5 1.5 "versicolor")
				(list 7.3 2.9 6.3 1.8 "virginica")
				(list 4.4 3.0 1.3 0.2 "setosa")
				(list 7.2 3.6 6.1 2.5 "virginica")
				(list 6.5 3.0 5.5 1.8 "virginica")
				(list 5.0 3.4 1.5 0.2 "setosa")
				(list 4.7 3.2 1.3 0.2 "setosa")
				(list 6.6 2.9 4.6 1.3 "versicolor")
				(list 5.5 3.5 1.3 0.2 "setosa")
				(list 7.7 3.0 6.1 2.3 "virginica")
				(list 6.1 3.0 4.9 1.8 "virginica")
				(list 4.9 3.1 1.5 0.1 "setosa")
				(list 5.5 2.4 3.8 1.1 "versicolor")
				(list 5.7 2.9 4.2 1.3 "versicolor")
				(list 6.0 2.9 4.5 1.5 "versicolor")
				(list 6.4 2.7 5.3 1.9 "virginica")
				(list 5.4 3.7 1.5 0.2 "setosa")
				(list 6.1 2.9 4.7 1.4 "versicolor")
				(list 6.5 2.8 4.6 1.5 "versicolor")
				(list 5.6 2.7 4.2 1.3 "versicolor")
				(list 6.3 3.4 5.6 2.4 "virginica")
				(list 4.9 3.1 1.5 0.1 "setosa")
				(list 6.8 2.8 4.8 1.4 "versicolor")
				(list 5.7 2.8 4.5 1.3 "versicolor")
				(list 6.0 2.7 5.1 1.6 "versicolor")
				(list 5.0 3.5 1.3 0.3 "setosa")
				(list 6.5 3.0 5.2 2.0 "virginica")
				(list 6.1 2.8 4.7 1.2 "versicolor")
				(list 5.1 3.5 1.4 0.3 "setosa")
				(list 4.6 3.1 1.5 0.2 "setosa")
				(list 6.5 3.0 5.8 2.2 "virginica")
				(list 4.6 3.4 1.4 0.3 "setosa")
				(list 4.6 3.2 1.4 0.2 "setosa")
				(list 7.7 2.8 6.7 2.0 "virginica")
				(list 5.9 3.2 4.8 1.8 "versicolor")
				(list 5.1 3.8 1.6 0.2 "setosa")
				(list 4.9 3.0 1.4 0.2 "setosa")
				(list 4.9 2.4 3.3 1.0 "versicolor")
				(list 4.5 2.3 1.3 0.3 "setosa")
				(list 5.8 2.7 4.1 1.0 "versicolor")
				(list 5.0 3.4 1.6 0.4 "setosa")
				(list 5.2 3.4 1.4 0.2 "setosa")
				(list 5.3 3.7 1.5 0.2 "setosa")
				(list 5.0 3.6 1.4 0.2 "setosa")
				(list 5.6 2.9 3.6 1.3 "versicolor")
				(list 4.8 3.1 1.6 0.2 "setosa")
				(list 6.3 2.7 4.9 1.8 "virginica")
				(list 5.7 2.8 4.1 1.3 "versicolor")
				(list 5.0 3.0 1.6 0.2 "setosa")
				(list 6.3 3.3 6.0 2.5 "virginica")
				(list 5.0 3.5 1.6 0.6 "setosa")
				(list 5.5 2.6 4.4 1.2 "versicolor")
				(list 5.7 3.0 4.2 1.2 "versicolor")
				(list 4.4 2.9 1.4 0.2 "setosa")
				(list 4.8 3.0 1.4 0.1 "setosa")
				(list 5.5 2.4 3.7 1.0 "versicolor")
			)
		test_data
			(list
				(list 5.9 3.0 4.2 1.5 "versicolor")
				(list 6.9 3.1 5.4 2.1 "virginica")
				(list 5.1 3.3 1.7 0.5 "setosa")
				(list 6.0 3.4 4.5 1.6 "versicolor")
				(list 5.5 2.5 4.0 1.3 "versicolor")
				(list 6.2 2.9 4.3 1.3 "versicolor")
				(list 5.5 4.2 1.4 0.2 "setosa")
				(list 6.3 2.8 5.1 1.5 "virginica")
				(list 5.6 3.0 4.1 1.3 "versicolor")
				(list 6.7 2.5 5.8 1.8 "virginica")
				(list 7.1 3.0 5.9 2.1 "virginica")
				(list 4.3 3.0 1.1 0.1 "setosa")
				(list 5.6 2.8 4.9 2.0 "virginica")
				(list 5.5 2.3 4.0 1.3 "versicolor")
				(list 6.0 2.2 4.0 1.0 "versicolor")
				(list 5.1 3.5 1.4 0.2 "setosa")
				(list 5.7 2.6 3.5 1.0 "versicolor")
				(list 4.8 3.4 1.9 0.2 "setosa")
				(list 5.1 3.4 1.5 0.2 "setosa")
				(list 5.7 2.5 5.0 2.0 "virginica")
				(list 5.4 3.4 1.7 0.2 "setosa")
				(list 5.6 3.0 4.5 1.5 "versicolor")
				(list 6.3 2.9 5.6 1.8 "virginica")
				(list 6.3 2.5 4.9 1.5 "versicolor")
				(list 5.8 2.7 3.9 1.2 "versicolor")
				(list 6.1 3.0 4.6 1.4 "versicolor")
				(list 5.2 4.1 1.5 0.1 "setosa")
				(list 6.7 3.1 4.7 1.5 "versicolor")
				(list 6.7 3.3 5.7 2.5 "virginica")
				(list 6.4 (null) 4.3 1.3 "versicolor")
			)

		context_features (list "sepal_length" "sepal_width" "petal_length" "petal_width")
		action_features (list "species")
	))

	(call_entity "howso" "set_internal_parameters" (assoc
		default_hyperparameter_map (assoc "k" 8 "p" 2.25 "dt" -1)
	))

	(set_entity_rand_seed "howso" 12345)

	;set nominals
	(call_entity "howso" "set_feature_attributes" (assoc
		features (assoc "species" (assoc "type" "nominal") )
	))

	(call_entity "howso" "train" (assoc
		features (append context_features action_features)
		session "synth1"
		input_cases (append training_data test_data)
	))

	(declare (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					feature_bounds_map
						(assoc
							"sepal_width" (assoc "max" 1.9 "min" 1.8 "allow_null" (false))
							"sepal_length" (assoc "max" 5)
							"petal_width" (assoc "min" 2)
						)
					context_features (list "species" "petal_length" )
					context_values (list "setosa" 4.4)
					action_features (append context_features action_features)
					desired_conviction 1
				))
				(list 1 "payload" "action_values")
			)
	))

	(print "Generate completely new case: \n" result)
	(print "species: ") (call assert_same (assoc exp "setosa" obs (get result 4)))
	(print "sepal_width: " ) (call assert_approximate (assoc exp 1.85 obs (get result 1 )))
	(print "sepal_length: " ) (call assert_true (assoc obs (< (get result 0 ) 5)))
	(print "petal_width: " ) (call assert_true (assoc obs (> (get result 3 ) 2)))
	(print "petal_length: ") (call assert_same (assoc exp 4.4 obs (get result 2 )))

	(call exit_if_failures (assoc msg "Generating new case"))


	(declare (assoc residuals (call_entity "howso" "debug_label" (assoc label "!residualsMap" ))))

	(print "residuals: ")
	(call assert_approximate (assoc
		obs (get residuals "robust.default")
		exp (assoc
				".hyperparam_path" (list ".default")
				".robust" (true)
				"petal_width" 0.14
				"species" 0.13
				"sepal_width" 0.24
				"petal_length" 0.44
				"sepal_length" 0.35
			)
		thresh 0.14
	))
	(call exit_if_failures (assoc msg "Residuals"))



	(call_entity "howso" "set_feature_attributes" (assoc features (assoc "sepal_length" (assoc "type" "ordinal"))))

	(assign (assoc
		result
			(get
				(call_entity "howso" "react" (assoc
					feature_bounds_map (assoc "sepal_length" (assoc "allowed" (list 4.85)) )
					desired_conviction 1
					action_features (append context_features action_features )
				))
				(list 1 "payload" "action_values")
			)
	))

	(print "ordinal feature bounds: ")
	(call assert_same (assoc exp 4.85 obs (get result "sepal_length" )))

	(call_entity "howso" "set_feature_attributes" (assoc
		features
			(assoc
				"petal_length" (assoc "type" "continuous" "bounds" (assoc "min" 0 "max" 2))
				"sepal_length" (assoc "type" "ordinal" "bounds" (assoc "allowed" (list 4.85)))
			)
	))


	(assign (assoc
		result
			;petal_length is the 3rd feature, index of 2
			(get
				(call_entity "howso" "react" (assoc
					desired_conviction .9
					action_features (append context_features action_features )
				))
				(list 1 "payload" "action_values" 2)
			)
	))
	(print "generated bounded petal_length [0,2]: " result)
	(call assert_true (assoc obs (and (> result 0) (< result 2))))



	(assign (assoc
		result
			;petal_length is the 3rd feature, index of 3
			(get
				(call_entity "howso" "react" (assoc
					feature_bounds_map (assoc "petal_length" (assoc "min" 4 "max" 8) )
					desired_conviction .9
					action_features (append context_features action_features )
				))
				(list 1 "payload" "action_values" 2)
			)
	))
	(print "generated bounded petal_length [4,8]: " result)
	(call assert_true (assoc obs (and (> result 4) (< result 8))))

	(call exit_if_failures (assoc msg unit_test_name))
)