(seq
	#unit_test (direct_assign_to_entities (assoc unit_test (load "unit_test.amlg")))
	(call (load "unit_test_howso.amlg") (assoc name "ut_h_type_hints.amlg"))

    ;explicitly allow access to internal method for this test
	(accum_entity_roots "howso" (list
		(set_labels
			(lambda
				(call !BuildParameterValidationMap)
			)
			(list "BuildParameterValidationMap")
		)
	))

    (declare (assoc
        ;this method returns True if the validation map is built succesfully, returns a list of invalid type hints if not built successfully
        invalid_type_hints (call_entity "howso" "BuildParameterValidationMap")
    ))

    (call assert_true (assoc
        ;the list will be a "truthy" so specifically check if it is (true)
        obs (= (true) invalid_type_hints)
    ))

    (call exit_if_failures (assoc
        msg (concat "Invalid Type Hints: " (apply "concat" (trunc (weave invalid_type_hints ", "))) )
    ))

    (declare (assoc
		result
			(call_entity "howso" "batch_react" (assoc
				context_features (list "A" 34 "C")
                exclude_novel_nominals_from_uniqueness_check (true)
			))
	))

    (call assert_same (assoc
        obs 0
        exp (first result)
    ))

    (assign (assoc
		result
			(call_entity "howso" "train" (assoc
				features (list "A" "B" "C")
                input_cases (list (list 1 2 3))

                fake_param "hahahah"
			))
	))

    (call assert_same (assoc
        obs 0
        exp (first result)
    ))

    (call exit_if_failures (assoc msg unit_test_name ))
)