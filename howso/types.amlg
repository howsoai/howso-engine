;Contains the Trainee attribute #!customTypes, which defines custom schemas for typing purposes, used in validation and API specification.
(null

	;An assoc of schema_name to assoc of type definition, see CONTRIBUTING.md/Typing Guide for more information
	#!customTypes
	(assoc
		FeatureAttributes
			(assoc
				type "assoc"
				description "The mapping of attributes for a single feature"
				indices
					(assoc
						type
							(assoc
								required (true)
								ref "FeatureType"
							)
						sample
							(assoc
								type "any"
								description "A sample of a value for the feature."
							)
						bounds {ref "FeatureBounds"}
						cycle_length
							(assoc
								type "number"
								description
									(concat
										"Cyclic features are set by specifying a `cycle_length` value in the feature attributes. "
										"`cycle_length` requires a single value, which is the upper bound of the difference for "
										"the cycle range. For example, if `cycle_length` is 360,  then a value of 1 and 359 will "
										"have a difference of 2. Cyclic features have no restrictions in the input dataset, however, "
										"cyclic features will be output on a scale from 0 to `cycle_length`. To constrain the "
										"output to a different range, modify the `min` and `max` `bounds` feature attribute.\n\n"

										"Examples:\n"
										"- degrees: values should be 0-359, cycle_length = 360\n"
										"- days: values should be 0-6, cycle_length = 7\n"
										"- hours: values should be 0-23, cycle_length = 24\n"
									)
							)
						date_time_format
							(assoc
								type "string"
								description "If specified, feature values should match the date format specified by this string. Only applicable to continuous features."
							)
						locale
							(assoc
								type "string"
								description "The date time format locale. If unspecified, uses platform default locale."
							)
						significant_digits
							(assoc
								type "number"
								description "Round to the specified significant digits, default is no rounding."
							)
						decimal_places
							(assoc
								type "number"
								description
									(concat
										"Decimal places to round to, default is no rounding. If `significant_digits` is also specified, the number will "
										"be rounded to the specified number of significant digits first, then rounded to the number of decimal points as "
										"specified by this parameter."
									)
							)
						observational_error
							(assoc
								type "number"
								description "Specifies the observational mean absolute error for this feature. Use when the error value is already known."
							)
						data_type {ref "FeatureDataType"}
						id_feature
							(assoc
								type "boolean"
								description
									(concat
										"Set to true for nominal features containing nominal IDs, specifying that his feature should be used to compute case weights "
										"for id based privacy. For time series, this feature will be used as the id for each time series generation. "
									)
							)
						unique
							(assoc
								type "boolean"
								description "Flag feature as only having unique values. Only applicable to nominals features."
							)
						dependent_features
							(assoc
								type "list"
								values "string"
								description
									(concat
										"A list of other feature names that this feature either depends on or features that depend on this feature. Should be used "
										"when there are multi-type value features that tightly depend on values based on other multi-type value features."
									)
							)
						null_is_dependent
							(assoc
								type "boolean"
								description
									(concat
										"Modify how dependent features with nulls are treated during a react, specifically when they use null as a context value. "
										"Only applicable to dependent features.\n\n"

										"When false (default), the feature will be treated as a non-dependent context feature.\n"
										"When true for nominal types, treats null as an individual dependent class value, only cases that also have nulls as this "
										"feature's value will be considered.\n"
										"When true for continuous types, only the cases with the same dependent feature values as the cases that also have nulls "
										"as this feature's value will be considered."
									)
							)
						auto_derive_on_train
							(assoc
								type "assoc"
								description
									(concat
										"Derive feature by creating two new continuous features: `.series_progress` and `.series_progress_delta`. "
										"Series progress values range from 0 to 1.0 for each case in the series. Series progress delta values are the delta "
										"value of the progress for each case. Both of these features are used to determine when to stop series synthesis."
									)
								additional_indices (false)
								indices
									(assoc
										derive_type
											(assoc
												type "string"
												enum ["custom" "start" "end" "progress"]
												description "The train derive operation type."
											)
										code
											(assoc
												type "string"
												description "The Amalgam code used to derive the feature value."
											)
										series_id_features
											(assoc
												type "list"
												values "string"
												description "Feature name(s) whose values are used to identify cases within the same series."
											)
										ordered_by_features
											(assoc
												type "list"
												values "string"
												description "Feature name(s) that define the order of the series."
											)
									)
							)
						derived_feature_code
							(assoc
								type "string"
								description
									(concat
										"Code defining how the value for this feature could be derived if this feature is specified as a `derived_context_feature` or a "
										"`derived_action_feature` during react flows. For `react_series`, the data referenced is the accumulated series data (as a list of rows), "
										"and for non-series reacts, the data is the one single row. Each row is comprised of all the combined context and action features. "
										"Referencing data in these rows uses 0-based indexing, where the current row index is 0, the previous row's is 1, etc. The specified "
										"code may do simple logic and numeric operations on feature values referenced via feature name and row offset\n\n"
										"Examples:\n"

										"- ``\"#x 1\"``: Use the value for feature 'x' from the previously processed row (offset of 1, one lag value).\n"
										"- ``\"(- #y 0 #x 1)\"``: Feature 'y' value from current (offset 0) row  minus feature 'x' value from previous (offset 1) row.\n"
									)
							)
						post_process
							(assoc
								type "string"
								description "Custom Amalgam code that is called on resulting values of this feature during react operations."
							)
						non_sensitive
							(assoc
								type "boolean"
								description
									(concat
										"Flag a categorical nominal feature as non-sensitive. It is recommended that all nominal features be represented with either "
										"an `int-id` subtype or another available nominal subtype using the `subtype` attribute. However, if the nominal feature is "
										"non-sensitive, setting this parameter to true will bypass the `subtype` requirement. Only applicable to nominal features."
									)
							)
						shared_deviations
							(assoc
								type ["list" "boolean"]
								values "string"
								description
									(concat
										"A list of feature names that will share deviations with this feature. In analysis, the predictions computed for this feature "
										"and the features specified are combined to create deviations that are used for all of the involved features. If a time series "
										"feature, then child lag features will automatically share deviations. If 'shared_deviations' is specified as false, then "
										"automatically created lag features will not automatically share deviations."
									)
							)
						subtype
							(assoc
								type "string"
								description "The type used in novel nominal substitution."
							)
						original_type
							(assoc
								ref "FeatureOriginalType"
								description "Original data type details. Used by clients to determine how to serialize and deserialize feature data."
							)
						original_format
							(assoc
								type "any"
								description "Original data formats used by clients. Automatically populated by clients to store client language specific context about features."
							)
						ts_type
							(assoc
								type "string"
								enum ["lag" "delta" "rate"]
								description "The type of value being captured by this time-series feature."
							)
						ts_order
							(assoc
								type "number"
								min 0
								description "The order of rate/delta being described by this time-series feature."
							)
						parent
							(assoc
								type "string"
								description "The feature whose values this time-series feature's values are derived from."
							)
						parent_type
							(assoc
								type "string"
								enum ["delta" "rate"]
								description "The type of time-series processing used by the parent feature."
							)
						max_row_lag
							(assoc
								type "number"
								description "The number of time steps traced back by the maximum lag feature created for this feature."
							)
						time_series
							(assoc
								type "assoc"
								description "Time series options for a feature."
								indices
									(assoc
										type
											(assoc
												type "string"
												enum ["rate" "delta"]
												description
													(concat
														"When `rate` is specified, uses the difference of the current value from its previous value divided by the "
														"change in time since the previous value. When `delta` is specified, uses the difference of the current "
														"value from its previous value regardless of the elapsed time. Set to `delta` if feature has `time_feature` "
														"set to true."
													)
											)
										time_feature
											(assoc
												type "boolean"
												description
													(concat
														"When true, the feature will be treated as the time feature for time series modeling. "
														"Additionally, time features must use type `delta`."
													)
											)
										order
											(assoc
												type "number"
												description "If provided, will generate the specified number of derivatives and boundary values."
											)
										derived_orders
											(assoc
												type "number"
												description "The number of orders of derivatives that should be derived instead of synthesized. Ignored if order is not provided."
											)
										lags
											(assoc
												type "list"
												values "number"
												description
													(concat
														"If specified, generates lag features containing previous values using the enumerated lag offsets. "
														"Takes precedence over `num_lags`. If neither `num_lags` nor `lags` is specified for a feature, then a single "
														"lag feature is generated."
													)
											)
										num_lags
											(assoc
												type "number"
												description
													(concat
														"If specified, generates the specified amount of lag features containing previous values. "
														"If `lags` is specified, then this parameter will be ignored. If neither `num_lags` nor `lags` "
														"is specified for a feature, then a single lag feature is generated."
													)
											)
										rate_min
											(assoc
												type "list"
												values "number"
												description
													(concat
														"If specified, ensures that the rate (the difference quotient, the discrete version of derivative) "
														"for this feature won't be less than the value provided. A null value means no min boundary. The value must be in "
														"epoch format for the time feature. The length of the list must match the number of derivatives as specified by `order`. "
														"Only applicable when time series type is set to `rate`."
													)
											)
										rate_max
											(assoc
												type "list"
												values "number"
												description
													(concat
														"If specified, ensures that the rate (the difference quotient, the discrete version of derivative) "
														"for this feature won't be more than the value provided. A null value means no max boundary. The value must be in "
														"epoch format for the time feature. The length of the list must match the number of derivatives as specified by `order`. "
														"Only applicable when time series type is set to `rate`."
													)
											)
										delta_min
											(assoc
												type "list"
												values "number"
												description
													(concat
														"If specified, ensures that the smallest difference between features values is not smaller than this specified value. "
														"A null value means no min boundary. The length of the list must match the number of derivatives as specified by `order`. "
														"Only applicable when time series type is set to `delta`."
													)
											)
										delta_max
											(assoc
												type "list"
												values "number"
												description
													(concat
														"If specified, ensures that the largest difference between feature values is not larger than this specified value. "
														"A null value means no max boundary. The length of the list must match the number of derivatives as specified by `order`. "
														"Only applicable when time series type is set to `delta`."
													)
											)
										series_has_terminators
											(assoc
												type "boolean"
												description
													(concat
														"When true, requires that the model identify and learn values that explicitly denote the end of a series. "
														"Only applicable to id features for a series."
													)
											)
										stop_on_terminator
											(assoc
												type "boolean"
												description "When true, requires that a series ends on a terminator value. Only applicable to id features for a series."
											)
										universal
											(assoc
												type "boolean"
												description
													(concat
														"Controls whether future values of independent time series are considered. Applicable only to the time feature. "
														"When false, the time feature is not universal and allows using future data from other series in decisions; "
														"this is applicable when the time is not globally relevant and is independent for each time series. "
														"When true, universally excludes using any data with from the future from all series; "
														"this is applicable when time is globally relevant and there are events that may affect all time series. "
														"If there is any possibility of global relevancy of time, it is generally recommended to set this value to true, "
														"which is the default. "
													)
											)
									)
							)
					)
			)
		FeatureAttributesIndex
			(assoc
				type "assoc"
				additional_indices {ref "FeatureAttributes"}
				description "A map of feature name to feature attributes."
			)
		FeatureType
			(assoc
				type "string"
				enum ["continuous" "ordinal" "nominal"]
				description
					(concat
						"The type of the feature.\n\n"
						"- continuous: A continuous numeric value. (e.g. Temperature or humidity)\n"
						"- nominal: A numeric or string value with no ordering. (e.g. The name of a fruit)\n"
						"- ordinal: A nominal numeric value with ordering. (e.g. Rating scale, 1-5 stars)\n"
					)
			)
		FeatureDataType
			(assoc
				type "string"
				enum ["string" "number" "boolean" "formatted_date_time" "formatted_time" "string_mixable" "json" "yaml" "amalgam"]
				description
					(concat
						"The data type of a feature. Default is `string` for nominals and `number` for continuous.\n\n"
						"Valid values include:\n"
						"- `string`, `number`, `formatted_date_time`, `formatted_time`, `json`, `amalgam`, `yaml`: Valid for both nominal and continuous.\n"
						"- `string_mixable`: Valid only when type is continuous (predicted values may result in interpolated strings "
							"\tcontaining a combination of characters from multiple original values).\n"
						"- `boolean`: Valid only for nominals."
					)
			)
		FeatureOriginalType
			(assoc
				any_of [
					{ref "FeatureOriginalTypeBoolean"}
					{ref "FeatureOriginalTypeDate"}
					{ref "FeatureOriginalTypeDatetime"}
					{ref "FeatureOriginalTypeInteger"}
					{ref "FeatureOriginalTypeNumeric"}
					{ref "FeatureOriginalTypeString"}
					{ref "FeatureOriginalTypeTime"}
					{ref "FeatureOriginalTypeTimedelta"}
					{ref "FeatureOriginalTypeObject"}
				]
				description "Original data type details. Used by clients to determine how to serialize and deserialize feature data."
			)
		FeatureOriginalTypeBoolean
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["boolean"]
						required (true)
						description "The data type kind."
					}
				}
			)
		FeatureOriginalTypeDatetime
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["datetime"]
						required (true)
						description "The data type kind."
					}
					timezone {
						type ["string" "null"]
						description "The standardized timezone name."
					}
				}
			)
		FeatureOriginalTypeDate
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["date"]
						required (true)
						description "The data type kind."
					}
				}
			)
		FeatureOriginalTypeInteger
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["integer"]
						required (true)
						description "The data type kind."
					}
					unsigned {
						type "boolean"
						description "If the integer is unsigned."
					}
					size {
						type ["number" "null"]
						description "The size of the integer (in bytes)."
					}
				}
			)
		FeatureOriginalTypeNumeric
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["numeric"]
						required (true)
						description "The data type kind."
					}
					format {
						type ["string" "null"]
						enum ["decimal"]
						description "The format of the number."
					}
					size {
						type ["number" "null"]
						description "The size of the number (in bytes)."
					}
				}
			)
		FeatureOriginalTypeString
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["string"]
						required (true)
						description "The data type kind."
					}
					length {
						type ["number" "null"]
						description "The maximum allowed length of the string."
					}
					encoding {
						type ["string" "null"]
						description "The string encoding type."
					}
				}
			)
		FeatureOriginalTypeTime
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["time"]
						required (true)
						description "The data type kind."
					}
					timezone {
						type ["string" "null"]
						description "The standardized timezone name."
					}
				}
			)
		FeatureOriginalTypeTimedelta
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["timedelta"]
						required (true)
						description "The data type kind."
					}
					unit {
						type "string"
						enum ["days" "seconds" "nanoseconds"]
						description "The unit of the time delta."
					}
				}
			)
		FeatureOriginalTypeObject
			(assoc
				type "assoc"
				indices {
					data_type {
						type "string"
						enum ["object"]
						required (true)
						description "The data type kind."
					}
				}
			)
		CaseIndices
			(assoc
				type "list"
				values
					(assoc
						type "list"
						values (list "string" "number")
						min_size 2
						max_size 2
					)
				description
					(concat
						"List of tuples containing the session id and index, where index is the original 0-based index of the case as "
						"it was trained into the session. This explicitly specifies the cases to retrieve."
					)
			)
		Condition
			(assoc
				description
					(concat
						"The condition map to select the cases to remove that meet all the provided conditions. The dictionary keys "
						"are the feature name and values are one of:\n"
						"- None\n"
						"- A value, must match exactly.\n"
						"- An array of two numeric values, specifying an inclusive range. Only applicable to continuous and numeric ordinal features.\n"
						"- An array of string values, must match any of these values exactly. Only applicable to nominal and string ordinal features.\n"
					)
				type "assoc"
			)
		Precision (assoc type "string" enum (list "exact" "similar") description "Exact matching or fuzzy matching.")
		FeatureBounds
			(assoc
				type "assoc"
				additional_indices (false)
				indices
					(assoc
						min
							(assoc
								type ["number" "string"]
								description "The minimum value to be output. May be a number or date string."
							)
						max
							(assoc
								type ["number" "string"]
								description "The maximum value to be output. May be a number or date string."
							)
						allowed
							(assoc
								type "list"
								values "any"
								description "Explicitly allowed values to be output."
							)
						allow_null
							(assoc
								type "boolean"
								description "Allow nulls to be output, per their distribution in the data. Defaults to true."
							)
						constraint
							(assoc
								type "string"
								description
									(concat
										"Amalgam code, whose logic has to evaluate to true for value to be considered valid when "
										"this feature is being generated. Same format as 'derived_feature_code'.\n"

										"Examples:\n"
										"- ``\"(> #f1 0 #f2 0)\"``: Feature 'f1' value from current (offset 0) data must be bigger "
										"than feature 'f2' value from current (offset 0) data."
									)
							)
					)
				description "A map defining any feature bounds, allowed values, and constraints."
			)
		HyperparameterMap
			(assoc
				type "assoc"
				indices
					(assoc
						k
							(assoc
								type "number"
								required (true)
								description "The number of most similar cases used for interpolation."
							)
						p
							(assoc
								type "number"
								required (true)
								description "The parameter of the Lebesgue space."
							)
						dt
							(assoc
								type ["number" "string"]
								required (true)
								description
									(concat
										"The distance transform. Used as an exponent to convert distance to influence before normalization. "
										"Also accepts string value \"surprisal_to_prob\" as experimental option that converts distances to surprisal."
									)
								enum ["surprisal_to_prob"]
							)
						derivedAutoAnalyzed
							(assoc
								type "boolean"
								description "Internal flag indicating if derived features have been analyzed."
							)
						featureDeviations
							(assoc
								type ["assoc" "null"]
								description "Internal map of features to their deviations. Includes null deviations and sparse deviation matrices."
							)
						featureDomainAttributes
							(assoc
								type ["assoc" "null"]
								description "Internal map of features to various domain attributes."
							)
						featureWeights
							(assoc
								type ["assoc" "null"]
								additional_indices "number"
								description "Map of features to feature weights used in the distance metric."
							)
						paramPath
							(assoc
								type "list"
								values "string"
								description "The list of strings that make up the path to the set of hyperparameters within the larger hyperparameter map."
							)
						useDeviations
							(assoc
								type "boolean"
								description "Flag indicating if deviations are used in the distance metric."
							)
						allFeatureResidualsCached
							(assoc
								type "boolean"
								description "Flag indicating if all feature's residuals have been cached."
							)
						featureOrdinalDeviations
							(assoc
								type "assoc"
								description "Map of ordinal features to their deviations."
							)
						gridSearchError
							(assoc
								type "number"
								description "Error computed during the grid search in analysis."
							)
						nullUncertainties
							(assoc
								type "assoc"
								additional_indices {
									type "list"
									values ["number" "null"]
								}
								description "Map of features to null uncertainties which describes the distances in the context of missing values."
							)
						featureResiduals
							(assoc
								type "assoc"
								additional_indices "number"
								description "Map of features to their computed feature residuals."
							)
						featureMdaMap
							(assoc
								type "assoc"
								description "Map of each feature's map of feature weights."
							)
					)
				description "The base hyperparameter map containing all the individual parameter values."
			)
		HyperparameterMapFull
			(assoc
				type "assoc"
				additional_indices (false)
				indices
					(assoc
						targetless
							(assoc ref "HyperparameterMapTree")
						targeted
							(assoc
								type "assoc"
								;action_features
								additional_indices
									(assoc ref "HyperparameterMapTree")
							)
					)
				description "The full map containing all analyzed targetless and targeted hyperparameters."
			)
		HyperparameterMapTree
			(assoc
				type "assoc"
				;context_features key
				additional_indices
						(assoc
							;weight feature
							type "assoc"
							additional_indices
								(assoc ref "HyperparameterMap")
						)
				description "The subtree of a the full hyperparameter map starting with the nodes containing analyzed context_features."
			)
		NewCaseThreshold (assoc type "string" enum (list "min" "max" "most_similar") description "The privacy distance criteria for generated new cases.")
		ReactDetails
			(assoc
				type "assoc"
				additional_indices (false)
				indices
					(assoc
						influential_cases
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs the most influential cases and their influence weights based on the surprisal of each case "
										"relative to the context being predicted among the cases. Uses only the context features of the reacted case."
									)
							)
						influential_cases_familiarity_convictions
							(assoc
								type "boolean"
								description "When true, outputs familiarity conviction of addition for each of the influential cases."
							)
						influential_cases_raw_weights
							(assoc
								type "boolean"
								description "When true, outputs the surprisal for each of the influential cases."
							)
						hypothetical_values
							(assoc
								type "assoc"
								additional_indices "any"
								description
									(concat
										"A dictionary of feature name to feature value. If specified, shows how a prediction could change in a what-if "
										"scenario where the influential cases' context feature values are replaced with the specified values. Iterates "
										"over all influential cases, predicting the action features each one using the updated hypothetical values. "
										"Outputs the predicted arithmetic over the influential cases for each action feature."
									)
							)
						most_similar_cases
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs an automatically determined (when 'num_most_similar_cases' is not specified) relevant number "
										"of similar cases, which will first include the influential cases. Uses only the context features of the reacted case."
									)
							)
						num_most_similar_cases
							(assoc
								type "number"
								description
									(concat
										"When defined, outputs this manually specified number of most similar cases, which will first include the "
										"influential cases. Takes precedence over 'most_similar_cases' parameter."
									)
							)
						num_most_similar_case_indices
							(assoc
								type "number"
								description "When defined, outputs the specified number of most similar case indices when 'distance_ratio' is also set to true."
							)
						num_robust_influence_samples_per_case
							(assoc
								type "number"
								description
									(concat
										"Specifies the number of robust samples to use for each case. Applicable only for computing robust "
										"feature contributions or robust case feature contributions. Defaults to 2000 when unspecified. "
										"Higher values will take longer but provide more stable results."
									)
							)
						boundary_cases
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs an automatically determined (when 'num_boundary_cases' is not specified) relevant "
										"number of boundary cases. Uses both context and action features of the reacted case to determine the "
										"counterfactual boundary based on action features, which maximize the dissimilarity of action features while "
										"maximizing the similarity of context features. If action features aren't specified, uses familiarity conviction "
										"to determine the boundary instead."
									)
							)
						boundary_value_context_features
							(assoc
								type "list"
								values "string"
								description
									(concat
										"When specified, outputs a map of each specified feature to possible boundary values under \"boundary_values\". "
										"If 'boundary_value_action_outcome' is "
										"unspecified, then the returned values are values where the ratio of change in action to total change is maximized. "
										"If 'boundary_value_action_outcome' is specified, then the boundary values represent the closest found values for "
										"each context feature that shift the action to fulfill the condition."
									)
							)
						boundary_value_action_outcome
							(assoc
								ref "Condition"
								description
									(concat
										"The condition map to define the boundary within which the action of a prediction will be shifted to when the returned "
										" boundary values are used as context values instead of those given. The dictionary keys "
										"are the feature name and values are one of:\n"
										"- None\n"
										"- A value, must match exactly.\n"
										"- An array of two numeric values, specifying an inclusive range. Only applicable to continuous and numeric ordinal features.\n"
										"- An array of string values, must match any of these values exactly. Only applicable to nominal and string ordinal features.\n"
									)
							)
						num_boundary_cases
							(assoc
								type "number"
								description "When defined, outputs this manually specified number of boundary cases. Takes precedence over 'boundary_cases' parameter."
							)
						boundary_cases_familiarity_convictions
							(assoc
								type "boolean"
								description "When true, outputs familiarity conviction of addition for each of the boundary cases."
							)
						distance_ratio
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs the ratio of distance (relative surprisal) between this reacted case and its nearest case to "
										"the minimum distance (relative surprisal) in between the closest two cases in the local area. All distances are "
										"computed using only the specified context features."
									)
							)
						distance_contribution
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs the distance contribution (expected total surprisal contribution) for the reacted case. "
										"Uses both context and action feature values."
									)
							)
						similarity_conviction
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs similarity conviction for the reacted case. Uses both context and action feature values as "
										"the case values for all computations. This is defined as expected (local) distance contribution divided by "
										"reacted case distance contribution."
									)
							)
						outlying_feature_values
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs the reacted case's context feature values that are outside the min or max of the "
										"corresponding feature values of all the cases in the local model area. Uses only the context features of the "
										"reacted case to determine that area."
									)
							)
						categorical_action_probabilities
							(assoc
								type "boolean"
								description "When true, outputs probabilities for each class for the action. Applicable only to categorical action features."
							)
						derivation_parameters
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs a dictionary of the parameters used in the react call. These include k, p, "
										"distance_transform, feature_weights, feature_deviations, and nominal_class_counts."
									)
							)
						observational_errors
							(assoc
								type "boolean"
								description "When true, outputs observational errors for all features as defined in feature attributes."
							)
						features
							(assoc
								type "list"
								values "string"
								description
									(concat
										"A list of feature names that specifies for what features will per-feature details be computed "
										"(residuals, contributions, mda, etc.). This should generally preserve compute, but will not when "
										"computing details robustly. Details will be computed for all context and action features if this "
										"is not specified."
									)
							)
						feature_residuals_full
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs feature residuals for all (context and action) "
										"features locally around the prediction. Uses only the context "
										"features of the reacted case to determine that area. Uses "
										"full calculations, which uses leave-one-out for cases for computations."
									)
							)
						feature_residuals_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs feature residuals for all (context and action) "
										"features locally around the prediction. Uses only the context "
										"features of the reacted case to determine that area. Uses robust "
										"calculations, which uses uniform sampling from the power set of "
										"features as the contexts for predictions. 'selected_prediction_stats' "
										"controls the returned prediction stats."
									)
							)
						prediction_stats
							(assoc
								type "boolean"
								description
									(concat
										"When true outputs feature prediction stats for all (context "
										"and action) features locally around the prediction. The stats "
										"returned  are (\"r2\", \"rmse\", \"spearman_coeff\", \"precision\", "
										"\"recall\", \"accuracy\", \"mcc\", \"confusion_matrix\", \"missing_value_accuracy\"). "
										"Uses only the context features of the reacted case to determine that area. "
										"Uses full calculations, which uses leave-one-out context features for "
										"computations. 'selected_prediction_stats' controls the returned prediction stats."
									)
							)
						selected_prediction_stats
							(assoc
								type "list"
								values {ref "PredictionStat"}
								description
									(concat
										"Types of stats to output. When unspecified, returns all except the confusion_matrix. "
										"If all, then returns all including the confusion_matrix."
									)
							)
						feature_mda_full
							(assoc
								type "boolean"
								description
									(concat
										"When True will compute Mean Decrease in Accuracy (MDA) "
										"for each context feature at predicting the action feature. Drop "
										"each feature and use the full set of remaining context features "
										"for each prediction. False removes cached values."
									)
							)
						feature_mda_robust
							(assoc
								type "boolean"
								description
									(concat
										"Compute Mean Decrease in Accuracy MDA by dropping each feature and using the "
										"robust (power set/permutations) set of remaining context features "
										"for each prediction. False removes cached values."
									)
							)
						feature_mda_ex_post_full
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs each context feature's mean decrease in "
										"accuracy of predicting the action feature as an explanation detail "
										"given that the specified prediction was already made as "
										"specified by the action value. Uses both context and action "
										"features of the reacted case to determine that area. Uses "
										"full calculations, which uses leave-one-out for cases for "
										"computations."
									)
							)
						feature_mda_ex_post_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs each context feature's mean decrease in "
										"accuracy of predicting the action feature as an explanation detail "
										"given that the specified prediction was already made as "
										"specified by the action value. Uses both context and action "
										"features of the reacted case to determine that area. Uses "
										"robust calculations, which uses uniform sampling "
										"from the power set of features as the contexts for predictions. "
									)
							)
						feature_contributions_full
							(assoc
								type "boolean"
								description
									(concat
										"If True outputs each context feature's absolute and directional "
										"differences between the predicted action feature value and the "
										"predicted action feature value if each context were not in the "
										"model for all context features in the local model area. Uses "
										"full calculations, which uses leave-one-out for cases for "
										"computations. Directional feature contributions are returned "
										"under the key 'directional_feature_contributions_full'."
									)
							)
						feature_contributions_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True outputs each context feature's absolute and directional "
										"differences between the predicted action feature value and the "
										"predicted action feature value if each context were not in the "
										"model for all context features in the local model area Uses "
										"robust calculations, which uses uniform sampling from the power "
										"set of features as the contexts for predictions. Directional feature "
										"contributions are returned under the key "
										"'directional_feature_contributions_robust'."
									)
							)
						case_feature_contributions_full
							(assoc
								type "boolean"
								description
									(concat
										"If True outputs each context feature's absolute and directional "
										"differences between the predicted action feature value and the "
										"predicted action feature value if each context feature were not "
										"in the model for all context features in this case, using only "
										"the values from this specific case. Uses "
										"full calculations, which uses leave-one-out for cases for "
										"computations. Directional case feature "
										"contributions are returned under the "
										"'case_directional_feature_contributions_full' key."
									)
							)
						case_feature_contributions_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True outputs each context feature's absolute and directional "
										"differences between the predicted action feature value and the "
										"predicted action feature value if each context feature were not "
										"in the model for all context features in this case, using only "
										"the values from this specific case. Uses "
										"robust calculations, which uses uniform sampling from the power "
										"set of features as the contexts for predictions. "
										"Directional case feature contributions are returned under the "
										"'case_directional_feature_contributions_robust' key."
									)
							)
						case_mda_full
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs each influential case's mean decrease in "
										"accuracy of predicting the action feature in the local model "
										"area, as if each individual case were included versus not "
										"included. Uses only the context features of the reacted case to "
										"determine that area. Uses full calculations, which uses "
										"leave-one-out for cases for computations."
									)
							)
						case_mda_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs each influential case's mean decrease in "
										"accuracy of predicting the action feature in the local model "
										"area, as if each individual case were included versus not "
										"included. Uses only the context features of the reacted case to "
										"determine that area. Uses robust calculations, which uses "
										"uniform sampling from the power set of all combinations of cases."
									)
							)
						case_contributions_full
							(assoc
								type "boolean"
								description
									(concat
										"If true outputs each influential case's differences between the "
										"predicted action feature value and the predicted action feature "
										"value if each individual case were not included. Uses only the "
										"context features of the reacted case to determine that area. "
										"Uses full calculations, which uses leave-one-out for cases for "
										"computations."
									)
							)
						case_contributions_robust
							(assoc
								type "boolean"
								description
									(concat
										"If true outputs each influential case's differences between the "
										"predicted action feature value and the predicted action feature "
										"value if each individual case were not included. Uses only the "
										"context features of the reacted case to determine that area. "
										"Uses robust calculations, which uses uniform sampling from "
										"the power set of all combinations of cases."
									)
							)
						case_feature_residuals_full
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs feature residuals for all (context and action) "
										"features for just the specified case. Uses leave-one-out for "
										"each feature, while using the others to predict the left out "
										"feature with their corresponding values from this case. Uses "
										"full calculations, which uses leave-one-out for cases for "
										"computations."
									)
							)
						case_feature_residuals_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs feature residuals for all (context and action) "
										"features for just the specified case. Uses leave-one-out for "
										"each feature, while using the others to predict the left out "
										"feature with their corresponding values from this case. Uses "
										"robust calculations, which uses uniform sampling from the power "
										"set of features as the contexts for predictions."
									)
							)
						case_feature_residual_convictions_full
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs this case's feature residual model. "
										"Computed as: model feature full residual divided by case feature full residual."
									)
							)
						case_feature_residual_convictions_robust
							(assoc
								type "boolean"
								description
									(concat
										"If True, outputs this case's feature residual model. "
										"Computed as: model feature robust residual divided by case feature robust residual."
									)
							)
						generate_attempts
							(assoc
								type "boolean"
								description
									(concat
										"When true, outputs the number of attempts taken to generate each case. Only applicable when 'generate_new_cases' "
										"is \"always\" or \"attempt\". When used in react_series, \"series_generate_attempts\" is also returned."
									)
							)
					)
			)
		ReactAggregateDetails
			(assoc
				type "assoc"
				additional_indices (false)
				indices
					(assoc
						action_condition
							(assoc
								ref "Condition"
								description
									(concat
										"If specified, will condition the action set, which is the dataset for which the prediction stats are for. "
										"If both 'action_condition' and 'context_condition' are provided, then all of the action cases selected by "
										"the 'action_condition' will be excluded from the context set, which is the set being queried to make to make "
										"predictions on the action set, effectively holding them out. If only 'action_condition' is specified, then "
										"only the single predicted case will be left out."
									)
							)
						action_condition_precision
							(assoc
								ref "Precision"
								description "Used only with 'action_condition' parameter, will find exact matches if 'exact' and similar cases if 'similar'."
							)
						action_num_samples
							(assoc
								type "number"
								description
									(concat
										"Limit on the number of action cases used in calculating conditional prediction stats. Works with or "
										"without 'action_condition_filter_query'.\n"
										"If 'action_condition' is set:\n"
										"If null, will be set to k if precision is \"similar\" or no limit if precision is \"exact\". default is null\n\n"
										"If 'action_condition' is not set:\n"
										"If null, will be set to the Howso default limit of 2000. default is null"
									)
							)
						context_condition
							(assoc
								ref "Condition"
								description
									(concat
										"If specified, will condition the context set, which is the set being queried to make to make predictions on the action set. "
										"If both 'action_condition' and 'context_condition' are provided, then all of the cases from the action set, which is the "
										"dataset for which the prediction stats are for, will be excluded from the context set,  effectively holding them out. If only "
										"'action_condition' is specified, then only the single predicted case will be left out.\n"
									)
							)
						context_condition_precision
							(assoc
								ref "Precision"
								description
									(concat
										"Default is 'exact'. Used only with 'context_condition' parameter, will find exact matches if 'exact' and similar cases if 'similar'."
									)
							)
						context_condition_num_samples
							(assoc
								type "number"
								description
									(concat
										"Optional, limit on the number of context cases when 'context_condition_precision' is set to 'similar'. "
										"If null, will be set to k. default is null."
									)
							)
						feature_mda_full
							(assoc
								type "boolean"
								description
									(concat
										"If true will compute Mean Decrease in Accuracy (feature_mda) for each context feature at predicting mda_action_features. "
										"Drop each feature and use the full set of remaining context features for each prediction. false removes cached values. "
										"Uses full computation."
									)
							)
						feature_mda_robust
							(assoc
								type "boolean"
								description
									(concat
										"If true will compute feature_mda by dropping each feature and using the robust (power set/permutations) set of "
										"remaining context features for each prediction. false removes cached values. Uses robust computation."
									)
							)
						feature_mda_permutation_full
							(assoc
								type "boolean"
								description
									(concat
										"If true will compute feature_mda_full by scrambling each feature and using the full set of remaining context features "
										"for each prediction.  false removes cached values. Uses full computation."
									)
							)
						feature_mda_permutation_robust
							(assoc
								type "boolean"
								description
									(concat
										"If true will compute feature_mda by scrambling each feature and using the robust (power set/permutations) "
										"set of remaining context features for each prediction.  false removes cached values. Uses robust computation."
									)
							)
						feature_contributions_full
							(assoc
								type "boolean"
								description
									(concat
										"If true will for each context_feature, use the full set of all other context_features to compute the mean absolute delta "
										"between prediction of action_feature with and without the context_feature in the model. Uses full computation."
									)
							)
						feature_contributions_robust
							(assoc
								type "boolean"
								description
									(concat
										"For each context_feature, use the robust (power set/permutation) set of all other context_features to compute the mean "
										"absolute delta between prediction of action_feature with and without the context_feature in the model. Uses robust computation. "
										"Uses robust computation."
									)
							)
						feature_residuals_full
							(assoc
								type "boolean"
								description
									(concat
										"If true, will for each context_feature, use the full set of all other context_features to "
										"predict the feature.  When true, computes, caches, and returns the residuals for all features. Uses full computation. "
										"When \"prediction_stats\" in the \"details\" parameter is true, it will also compute and cache the feature residuals."
									)
							)
						feature_residuals_robust
							(assoc
								type "boolean"
								description
									(concat
										"If true, will for each context_feature, computes, caches, and returns the same stats as residuals but using the robust "
										"(power set/permutations) set of all other context_features to predict the feature. Uses robust computation."
									)
							)
						prediction_stats
							(assoc
								type "boolean"
								description
									(concat
										"If true outputs full feature prediction stats for all (context and action) features. The prediction stats returned "
										"are set by the `\"selected_prediction_stats`\" parameter. Uses full calculations, which "
										"uses leave-one-out for features for computations. Uses full computation. "
									)
							)
						selected_prediction_stats
							(assoc
								type "list"
								values {ref "PredictionStat"}
								description
									(concat
										"Types of stats to output. When unspecified, returns all except the confusion_matrix. "
										"If all, then returns all including the confusion_matrix."
									)
							)
					)
			)
		AblationThresholdMap
			(assoc
				type "assoc"
				description
					(concat
						"Map of prediction stats to map of feature name to threshold value. Thresholds can be absolute, delta, or relative depending "
						"on which parameter is being used."
					)
				additional_indices
					(assoc
						type "assoc"
						additional_indices (assoc type "number")
					)
			)
		GenerateNewCases
			(assoc
				type "string"
				enum (list "no" "attempt" "always")
				description
					(concat
						"Control whether generated cases can be those that already exist in the model. "
						"This parameter takes in a string that could be one of the following:\n"
						"a. \"attempt\": attempts to generate new cases and if its not possible to generate a new case, "
						"it might generate cases in \"no\" mode (see point c.)\n"
						"b. \"always\": always generates new cases and if its not possible to generate a new case, it returns nulls.\n"
						"c. \"no\": generates data based on the `desired_conviction` specified and the generated data is not guaranteed "
						"to be a new case (that is, a case not found in original dataset.)"
					)
			)
		PredictionStat
			(assoc
				type "string"
				enum (get_value !supportedPredictionStats)
				description "Types of prediction statistics."
			)
		DesiredConviction
			(assoc
				type ["number" "null"]
				exclusive_min 0
				description
					(concat
						"If null, will do a discriminative react. If specified, will do a generative react. "
						"For Generative React, value of desired avg conviction of generated cases, in the range of (0,infinity] with 1 as standard. "
						"Larger values will increase the variance (or creativity) of the generated case from the existing model. "
						"Smaller values will decrease the variance (or creativity) of the generated case from the existing model."
					)
			)
		UseCaseWeights
			(assoc
				type ["boolean" "null"]
				description
					(concat
						"If set to true will scale influence weights by each case's weight_feature weight. If null, "
						"case weights will be used if the trainee has them."
					)
			)
		EditHistoryRecord
			(assoc
				type "assoc"
				indices
					(assoc
						type
							(assoc
								type "string"
								enum ["set" "remove" "impute" "edit"]
								description "The type of modification."
							)
						feature
							(assoc
								type "string"
								description "The feature that was modified."
							)
						value
							(assoc
								type "any"
								description "The new value."
							)
						previous_value
							(assoc
								type "any"
								description "The previous value."
							)
					)
				description "A record of a single edit that was made to a feature of a case."
			)
		EditHistory
			(assoc
				type "assoc"
				additional_indices
					(assoc
						type "list"
						values {ref "EditHistoryRecord"}
					)
				description "The edit history of a given case. Keyed by the session id and in order of occurrence."
			)
		BuiltInFeatures
			(assoc
				type "assoc"
				description "The features and their values created by the Howso Engine automatically"
				indices
					(assoc
						".case_edit_history"
							(assoc
								ref "EditHistory"
							)
						".case_weight"
							(assoc
								type ["number" "null"]
								description "The default feature to store case weight, which scales the influence of a case during queries."
							)
						".session"
							(assoc
								type "string"
								description "The name of the session the case was trained in."
							)
						".session_training_index"
							(assoc
								type "number"
								description "The 0-based index of the case's order in training within its session."
							)
						".imputed"
							(assoc
								type ["list" "null"]
								values "string"
								description "The list of features that have been imputed for the case."
							)
						".influence_weight"
							(assoc
								type "number"
								description "The normalized influence of a case on a prediction."
							)
						".raw_influence_weight"
							(assoc
								type "number"
								description "The influence of a case on a prediction."
							)
						".series_progress"
							(assoc
								type "number"
								description "A 0-1 float describing the progress though the case's series at the point in time described by the case."
								min 0
								max 1
							)
						".series_progress_delta"
							(assoc
								type "number"
								description "The delta between the series progress of the previous case of the series and the case being described."
							)
						".series_index"
							(assoc
								type "number"
								min 0
								description "The zero-based index of the case within its series sorted by time."
							)
					)
				dynamic_indices
					(assoc
						"${string}_delta_${number}"
							(assoc
								type ["number" "null"]
								description "The N(number)-order of delta of the feature (string)."
							)
						"${string}_rate_${number}"
							(assoc
								type ["number" "null"]
								description "The N(number)-order rate of change of the feature (string)"
							)
						"${string}_lag_${number}"
							(assoc
								type "any"
								description "The value of the feature (string) from N (number) cases earlier within the series."
							)
					)
			)
		CategoricalActionProbabilities
			(assoc
				type "assoc"
				additional_indices "number"
				description "A map of giving the estimated probability of each class for a feature in a given prediction."
			)
		Cases
			(assoc
				type "list"
				description "A list of maps representing the cases that influenced a react."
				values {ref "Case"}
			)
		Case
			(assoc
				type "assoc"
				additional_indices "any"
			)
		OutlyingFeatureValuesIndex
			(assoc
				type "assoc"
				description "Map of feature name to map indicating the case value and the maximum or minimum value of the feature observed in the most similar cases."
				additional_indices
					{
						type "assoc"
						additional_indices (false)
						indices
							{
								"input_case_value" {type "number" description "The case value for the specified feature."}
								"local_max" {type "number" description "The largest value observed for the specified feature among the most similar cases."}
								"local_min" {type "number" description "The smallest value observed for the specified feature among the most similar cases."}
							}
					}
			)
		FeatureMetricIndex
			(assoc
				type "assoc"
				additional_indices "number"
				description "Map of feature names to numeric values."
			)
		CaseMDA
			(assoc
				type "assoc"
				description "A map for an influential case of a reaction that describes its training index, session, and MDA for the action feature."
				indices
					{
						".session" "string"
						".session_training_index" "number"
						"mda" "number"
					}
			)
		FullCaseContribution
			(assoc
				type "assoc"
				description "A map for an influential case that describes its training index, session, and the full contribution to the action feature."
				indices
					{
						".session" "string"
						".session_training_index" "number"
						"case_contributions_full" "number"
					}
			)
		RobustCaseContribution
			(assoc
				type "assoc"
				description "A map for an influential case that describes its training index, session, and the robust contribution to the action feature."
				indices
					{
						".session" "string"
						".session_training_index" "number"
						"case_contributions_robust" "number"
					}
			)
		DistanceRatioParts
			(assoc
				type "assoc"
				description "Map containing the two terms that are used to compute the distance ratio."
				additional_indices (false)
				indices
					{
						"local_distance_contribution"
							{
								type "number"
								description "The minimum distance between any two cases among the case's most similar trained cases."
							}
						"nearest_distance"
							{
								type "number"
								description "The distance from the case to its most similar trained case."
							}
					}
			)
		DerivationParameters
			(assoc
				type "assoc"
				description "A map containing the parameters used in the derivation of a reaction."
				additional_indices (false)
				indices
					{
						"k"
							{
								type "number" description "The number of most similar cases used to make the prediction."
							}
						"p"
							{
								type "number" description "The parameter of the Lebesgue space used in the Minkowski distance."
							}
						"distance_transform"
							{
								type ["number" "string"] enum ["surprisal_to_prob"]
								description "The distance transform used to convert the distance to influence weight."
							}
						"feature_weights"
							{
								ref "FeatureMetricIndex"
								description "A map of feature names to feature weights."
							}
						"feature_deviations"
							{
								type "assoc"
								additional_indices "any"
								description "A map of feature names to feature deviations. Values and their shape depend on the properties of the feature."
							}
						"nominal_class_counts"
							{
								ref "FeatureMetricIndex"
								description "A map of nominal feature names to the number of unique classes for each feature."
							}
						"targetless"
							{
								type "boolean" description "Flag indicating if parameters were derived using a targetless approach."
							}
					}
			)
		SimilarCaseIndex
			(assoc
				type "assoc"
				description "Map describing a case similar to the case being reacted to. Includes the distance from the query case, session, and index."
				indices
					{
						".session" "string"
						".session_training_index" "number"
						".distance" "number"
					}
			)
		ConfusionMatrix
			(assoc
				type "assoc"
				description "The confusion matrix in the form of maps from actual classes to maps of predicted classes to frequencies alongside counts for insignficant predictions."
				additional_indices (false)
				indices
					{
						"matrix"
							{
								type "assoc"
								description "A map of actual values to map of predicted values to counts."
								additional_indices
									{
										type "assoc"
										additional_indices {type ["number" "null"]}
									}
							}
						"leftover_correct"
							{
								type ["number" "null"]
								description "Total number of correct predictions for classes that were not statistically significant."
							}
						"leftover_incorrect"
							{
								type ["number" "null"]
								description "Total number of incorrect predictions for classes with any correct but statistically insignificant predictions."
							}
						"other_counts"
							{
								type ["assoc" "number" "null"]
								description "Total number of all other statistically insignificant predictions."
							}
					}
			)
		ReactionPredictionStats
			(assoc
				type "assoc"
				description "A map of prediction statistic names to maps of feature names to the computed values for each statistic."
				additional_indices (false)
				indices
					(append
						;all stats are map of feature name to numeric value except for confusion matrix
						(map
							(lambda {ref "FeatureMetricIndex"})
							(zip (filter
								(lambda
									(not (contains_value ["confusion_matrix" "all"] (current_value)))
								)
								!supportedPredictionStats
							))
						)
						(assoc
							"confusion_matrix"
								{
									type "assoc"
									additional_indices {ref "ConfusionMatrix"}
								}
						)
					)
			)
		TypeSchema
			(assoc
				any_of
					[
						{ref "TypeString"}
						{type "list" values {ref "TypeString"}}
						{ref "TypeDefinition"}
					]
			)
		TypeDefinition
			(assoc
				type "assoc"
				description "A description of a type that the values of the described value should conform to."
				additional_indices (false)
				indices
					{
						"type"
							{
								any_of
									[
										{ref "TypeString"}
										{type "list" values {ref "TypeString"}}
									]
								description "The type of data. The string name of the type or a list of possible types."
							}
						"indices"
							{
								type "assoc"
								description "A map of named indices to the types expected of their values when the structure is an (assoc)."
								additional_indices {ref "TypeSchema"}
							}
						"additional_indices"
							{
								description "The expected type of values pointed to by any unnamed indices when the structure is an (assoc)."
								any_of
									[
										{ref "TypeSchema"}
										"boolean"
									]
							}
						"dynamic_indices"
							{
								type "assoc"
								description "A map of patterned keys to their expected types."
								values {ref "TypeSchema"}
							}
						"values"
							{
								description "The expected type of the structure's values when the structure is a (list)."
								ref "TypeSchema"
							}
						"min"
							{
								type "number"
								description "The inclusive minimum value when the type is a number."
							}
						"max"
							{
								type "number"
								description "The inclusive maximum value when the type is a number."
							}
						"exclusive_min"
							{
								type "number"
								description "The exclusive minimum value when the type is a number."
							}
						"exclusive_max"
							{
								type "number"
								description "The exclusive maximum value when the type is a number."
							}
						"min_size"
							{
								type "number"
								description "The inclusive minimum size when the type is a (list)."
							}
						"max_size"
							{
								type "number"
								description "The exclusive maximum value when the type is a (list)."
							}
						"min_indices"
							{
								type "number"
								description "The inclusive minimum number of indices when the type is a (assoc)."
							}
						"max_indices"
							{
								type "number"
								description "The inclusive maximum number of indices when the type is a (assoc)."
							}
						"enum"
							{
								type "list"
								values "string"
								description "A list of possible values when the type is a string."
							}
						"pattern"
							{
								type "string"
								description "A regex pattern that the given value must match on."
							}
						"min_length"
							{
								type "number"
								description "The inclusive lower limit for the length of a given string."
							}
						"max_length"
							{
								type "number"
								description "The inclusive upper limit for the length of a given string."
							}
						"required"
							{
								type "boolean"
								description "Flag indicating if the value is required to be specified as not (null)."
							}
						"ref"
							{
								type "string"
								description "A reference to a named schema to use the type definition there."
								enum (indices !customTypes)
							}
						"description"
							{
								type "string"
								description "A description of the type and the meaning of the value."
							}
						"any_of"
							{
								type "list"
								values {ref "TypeSchema"}
							}
						"default"
							{
								type "any"
								description "The default value. Only used when describing a parameter."
							}
					}
			)
		TypeString
			(assoc
				type "string"
				enum ["string" "list" "assoc" "number" "null" "boolean" "any"]
				description "The string name of the type a value should be."
			)
		TraineePath
			(assoc
				type "list"
				values {ref "TraineePathLabel"}
				description "A list of human-readable labels describing the hierarchical path of the Trainee."
			)
		TraineePathLabel
			(assoc
				type "string"
				pattern "^[^.\\s]+$"
				description "The human-readable label of the Trainee in a hierarchy."
				max_length 256
			)
	)
)