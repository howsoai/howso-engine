;Contains the Trainee attribute #!returnTypes, which defines custom schemas of return types, used in validation and API specification.
(null

	;An assoc of schema_name to assoc of type definition, see CONTRIBUTING.md/Typing Guide for more information
	#!returnTypes
	(assoc
		ReactResponse
			(assoc
				type "assoc"
				description "The response payload for #react."
				additional_indices (false)
				indices
					{
						"action_features"
							{
								type "list"
								values "string"
								description "The list of action features in the order the action values are returned."
								required (true)
							}
						"action_values"
							{
								type "list"
								values {type "list" values "any"}
								description "A list of lists of predicted values for each case."
								required (true)
							}
						"categorical_action_probabilities"
							{
								type "list"
								description "A list of maps of feature names to their estimated probabilities of each class for the given cases."
								values
									{
										type "assoc"
										additional_indices {ref "CategoricalActionProbabilities"}
									}
							}
						"influential_cases"
							{
								type "list"
								description "A list of lists of influential cases for each given case."
								values {ref "Cases"}
							}
						"most_similar_cases"
							{
								type "list"
								description "A list of lists of the most similar cases to each given case."
								values {ref "Cases"}
							}
						"boundary_cases"
							{
								type "list"
								description "A list of lists of boundary cases for each given case."
								values {ref "Cases"}
							}
						"distance_ratio"
							{
								type "list"
								values "number"
								description "The computed distance ratio for each given case."
							}
						"distance_contribution"
							{
								type "list"
								values "number"
								description "The computed distance contribution for each given case."
							}
						"similarity_conviction"
							{
								type "list"
								values "number"
								description "The computed similarity conviction for each given case."
							}
						"outlying_feature_values"
							{
								type "list"
								description "A list of maps from feature name to map describing the outlying values and the extreme observed among similar cases."
								values {ref "OutlyingFeatureValuesIndex"}
							}
						"observational_errors"
							{
								type "list"
								description "A list of maps defining the observational errors for each feature defined in the feature attributes."
								values {ref "FeatureMetricIndex"}
							}
						"feature_residuals_robust"
							{
								type "list"
								description "A list of maps defining the local feature robust residuals for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"feature_residuals_full"
							{
								type "list"
								description "A list of maps defining the local feature full residuals for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"feature_mda_robust"
							{
								type "list"
								description "A list of maps defining the local feature robust MDA of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"feature_mda_full"
							{
								type "list"
								description "A list of maps defining the local feature full MDA of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"feature_mda_ex_post_robust"
							{
								type "list"
								description
									(concat
										"A list of maps defining the local feature robust MDA of the action feature for each feature in "
										"the query given the prediction was already made as the given action value."
									)
								values {ref "FeatureMetricIndex"}
							}
						"feature_mda_ex_post_full"
							{
								type "list"
								description
									(concat
										"A list of maps defining the local feature full MDA of the action feature for each feature in "
										"the query given the prediction was already made as the given action value."
									)
								values {ref "FeatureMetricIndex"}
							}
						"feature_contributions_robust"
							{
								type "list"
								description "A list of maps defining the local feature robust contributions of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"feature_contributions_full"
							{
								type "list"
								description "A list of maps defining the local feature full contributions of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"directional_feature_contributions_robust"
							{
								type "list"
								description "A list of maps defining the local feature robust directional contributions of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"directional_feature_contributions_full"
							{
								type "list"
								description "A list of maps defining the local feature robust directional contributions of the action feature for each feature in the query."
								values {ref "FeatureMetricIndex"}
							}
						"case_mda_robust"
							{
								type "list"
								description "A list of lists of maps containing the case index and robust MDA for each influential case of each given case."
								values
									{
										type "list"
										values {ref "CaseMDA"}
									}
							}
						"case_mda_full"
							{
								type "list"
								description "A list of lists of maps containing the case index and full MDA for each influential case of each given case."
								values
									{
										type "list"
										values {ref "CaseMDA"}
									}
							}
						"case_contributions_full"
							{
								type "list"
								description "A list of lists of maps containing the case index and full contribution to the action feature for each influential case of each given case."
								values
									{
										type "list"
										values {ref "FullCaseContribution"}
									}
							}
						"case_contributions_robust"
							{
								type "list"
								description "A list of lists of maps containing the case index and robust contribution to the action feature for each influential case of each given case."
								values
									{
										type "list"
										values {ref "RobustCaseContribution"}
									}
							}
						"case_feature_contributions_full"
							{
								type "list"
								description "A list of lists of maps containing the case index and full contribution to the action feature each given case."
								values {ref "FeatureMetricIndex"}

							}
						"case_feature_contributions_robust"
							{
								type "list"
								description "A list of lists of maps containing the case index and robust contribution to the action feature each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_directional_feature_contributions_full"
							{
								type "list"
								description "A list of lists of maps containing the case index and full directional contribution to the action feature each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_directional_feature_contributions_robust"
							{
								type "list"
								description "A list of lists of maps containing the case index and robust directional contribution to the action feature each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_feature_residuals_full"
							{
								type "list"
								description "A list of maps from feature name to the full prediction residual for each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_feature_residuals_robust"
							{
								type "list"
								description "A list of maps from feature name to the robust prediction residual for each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_feature_residual_convictions_full"
							{
								type "list"
								description "A list of maps from feature name to feature full residual conviction for each given case."
								values {ref "FeatureMetricIndex"}
							}
						"case_feature_residual_convictions_robust"
							{
								type "list"
								description "A list of maps from feature name to feature robust residual conviction for each given case."
								values {ref "FeatureMetricIndex"}
							}
						"generate_attempts"
							{
								type "list"
								values "number"
								description "A list of the amount of generation attempts taken for each synthesized case. Only returned if `generate_new_cases` is 'attempt' or 'always'."
							}
						"distance_ratio_parts"
							{
								type "list"
								values {ref "DistanceRatioParts"}
								description "A list of the parts that are used to compute the distance ratio for each case."
							}
						"hypothetical_values"
							{
								type "list"
								description "A list of maps from feature name to feature values indicating how feature values would be predicted if the given hypothetical values were true."
								values
									{
										type "assoc"
										additional_indices "any"
									}
							}
						"most_similar_case_indices"
							{
								type "list"
								description "A list of lists of maps describing the most similar case indices and their distance from each given case."
								values
									{
										type "list"
										values {ref "SimilarCaseIndex"}
									}
							}
						"prediction_stats"
							{
								type "list"
								description "A list of maps containing the resulting prediction stats for the region of cases nearest to each given case."
								values {ref "ReactionPredictionStats"}
							}
					}
			)
		ReactSeriesResponse
			(assoc
				type "assoc"
				description "The response payload for #react_series."
				additional_indices (false)
				indices
					;all the same details from ReactResponse, but need to wrap them in an extra list
					(append
						(map
							(lambda
								(if (contains_value !tsSupportedDetails (current_index))
									;if supported, just wrap in an extra list
									(assoc
										type "list"
										description "A list of the detail result lists for each case of each series."
										values (current_value 1)
									)

									;type experimental details as "any"
									(assoc type "any" description "Experimental. The same detail as in standard #react, but accumulated for each case in each series.")
								)
							)
							(call (remove (get !returnTypes ["ReactResponse" "indices"]) ["action_features" "action_values"]))
						)
						{
							"action_features"
								{
									type "list"
									values "string"
									description "The list of feature names that correspond to the values in each list of values in 'action_values'."
									required (true)
								}
							"action_values"
								{
									type "list"
									description "A list of individual series."
									required (true)
									values
										{
											type "list"
											description "A list defining a series of cases."
											values
												{
													type "list"
													values "any"
													description "Specific cases within a series."
												}
										}
								}
							;series-only details
							"series_generate_attempts"
								{
									type "list"
									description "A list of generation attempts for each series as a whole."
									values "number"
								}
							"aggregated_categorical_action_probabilities"
								{
									type "list"
									description "A list of aggregated categorical action probabilities for each nominal features across all the cases of each series."
									values
										{
											type "assoc"
											additional_indices {ref "CategoricalActionProbabilities"}
										}
								}
						}
					)
			)
		GetAPIResponse
			{
				type "assoc"
				additional_indices (false)
				indices {
					"schemas" {
						type "assoc"
						required (true)
						additional_indices {ref "TypeSchema"}
						description "A map of named type schemas and their definitions."
					}
					"description" {
						type "string"
						required (true)
						description "A description of the Trainee."
					}
					"version" {
						type "string"
						required (true)
						description "The version of the Trainee."
					}
					"labels" {
						type "assoc"
						required (true)
						description "A map of label names to maps of information about the label's behavior, parameters, return values, and other properties."
						additional_indices {
							type "assoc"
							additional_indices (false)
							indices {
								"description" {
									type "string"
									description "A written description of the label and its function."
								}
								"parameters" {
									type ["assoc" "null"]
									description "A map of parameter name to the type of values accepted."
									additional_indices {ref "TypeSchema"}
								}
								"returns" {
									any_of [ {ref "TypeSchema"} "null" ]
									description "The type definition of the return payload for the label. Null if no value is returned."
								}
								"idempotent" {
									type "boolean"
									description "Flag indicating if the label's behavior is idempotent."
								}
								"statistically_idempotent" {
									type "boolean"
									description "Flag indicating if the label's behavior is statistically idempotent. Results can differ on additional calls but will stay statisically consistent."
								}
								"read_only" {
									type "boolean"
									description "Flag indicating if the label's behavior is read-only, which would mean there are no writes to the Trainee."
								}
								"long_running" {
									type "boolean"
									description "Flag indicating if the label may not be executed quickly."
								}
								"payload" {
									type "boolean"
									description "Flag indicating if the label uses the payload response format. Defaults to true if unspecified."
								}
								"attribute" {
									type ["string" "list"]
									enum ["boolean" "string" "number" "null"]
									values {
										type "string"
										enum ["boolean" "string" "number" "null"]
									}
									description "Flag indicating the label is an attribute containing a value, rather than an executable method."
								}
								"use_active_session" {
									type "boolean"
									description "Flag indicating if the label should be given the active session for the session parameter automatically from clients."
								}
							}
						}
					}
				}
			}
		GetAutoAblationParamsResponse
			{
				type "assoc"
				additional_indices (false)
				indices {
					"auto_ablation_enabled" {
						type "boolean"
						description "Flag indicating if automatic ablation is enabled."
					}
					"auto_ablation_weight_feature" {
						type "string"
						description "The name of the weight feature which is accumulated and used in automatic ablation."
					}
					"minimum_num_cases" {
						type "number"
						description "The minimum number of cases to train before automatic ablation begins."
					}
					"influence_weight_entropy_threshold" {
						type "number"
						description "The minimum threshold of influence weight entropy for a case to be ablated in the process of automatic ablation."
					}
					"abs_threshold_map" {
						ref "AblationThresholdMap"
						description "The absolute threshold map set by set_auto_ablation_params, if any."
					}
					"delta_threshold_map" {
						ref "AblationThresholdMap"
						description "The delta threshold map set by set_auto_ablation_params, if any."
					}
					"rel_threshold_map" {
						ref "AblationThresholdMap"
						description "The relative threshold map set by set_auto_ablation_params, if any."
					}
					"exact_prediction_features" {
						type "list"
						values "string"
						description "The list of features that if predicted correctly on a new case will trigger the ablation of the case."
					}
					"tolerance_prediction_threshold_map" {
						type "assoc"
						additional_indices "number"
						description "The map of features to absolute thresholds that if predicted within on a new case will trigger the ablation of the case."
					}
					"relative_prediction_threshold_map" {
						type "assoc"
						additional_indices "number"
						description "The map of features to relative thresholds that if predicted within on a new case will trigger the ablation of the case."
					}
					"residual_prediction_features" {
						type "list"
						values "string"
						description "The list of features that if predicted within their residual on a new case will trigger the ablation of the case."
					}
					"conviction_upper_threshold" {
						type "number"
						description "The conviction threshold below which cases will be ablated."
					}
					"conviction_lower_threshold" {
						type "number"
						description "The conviction threshold above which cases will be ablated."
					}
				}
			}
		ReactAggregateResponse
			{
				type "assoc"
				description "Map of requested detail names to maps of feature names to their computed values for the specified feature."
				additional_indices (false)
				indices {
					"feature_residuals_full" {
						type "assoc"
						description "The mean absolute error of predicting each feature using the full set of context features."
						additional_indices {
							type ["number" "null"]
						}
					}
					"feature_residuals_robust" {
						type "assoc"
						description "The mean absolute error of predicting each feature using samples from the power-set of context features."
						additional_indices {
							type ["number" "null"]
						}
					}
					"feature_contributions_full" {
						type "assoc"
						description
							(concat
								"The mean absolute difference of predicting the specified action feature with and without each feature while "
								"using the full set of remaining context features."
							)
						additional_indices {
							type ["number" "null"]
						}
					}
					"directional_feature_contributions_full" {
						type "assoc"
						description
							(concat
								"The mean difference of predicting the specified action feature with and without each feature while "
								"using the full set of remaining context features."
							)
						additional_indices {
							type ["number" "null"]
						}
					}
					"feature_contributions_robust" {
						type "assoc"
						description
							(concat
								"The mean absolute difference of predicting the specified action feature with and without each feature while "
								"using samples from the power-set of remaining context features."
							)
						additional_indices {
							type ["number" "null"]
						}
					}
					"directional_feature_contributions_robust" {
						type "assoc"
						description
							(concat
								"The mean difference of predicting the specified action feature with and without each feature while "
								"using samples from the power-set of remaining context features."
							)
						additional_indices {
							type ["number" "null"]
						}
					}
					"feature_mda_full" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description
							(concat
								"The mean decrease in accuracy of predicting the specified action feature without each feature versus "
								"with each feature while using full set of remaining context features."
							)
					}
					"feature_mda_robust" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description
							(concat
								"The mean decrease in accuracy of predicting the specified action feature without each feature versus "
								"with each feature while using samples from the power-set of remaining context features."
							)
					}
					"feature_mda_permutation_full" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description
							(concat
								"The mean decrease in accuracy of predicting the specified action feature using scrambled "
								"values for each feature versus non-scrambled values for each feature while using the full "
								"set of remaining context features."
							)
					}
					"feature_mda_permutation_robust" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description
							(concat
								"The mean decrease in accuracy of predicting the specified action feature using scrambled "
								"values for each feature versus non-scrambled values for each feature while using samples "
								"from the power-set of remaining context features."
							)
					}
					"adjusted_smape" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The symmetric mean absolute percentage error with added the min gap / 2 to the actual and predicted values for each feature."
					}
					"smape" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The symmetric mean absolute percentage error of predicting each feature."
					}
					"mae" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The mean absolute error of predicting each feature."
					}
					"recall" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The recall of predicting each feature."
					}
					"precision" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The precision of predicting each feature."
					}
					"accuracy" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The accuracy of predicting each feature."
					}
					"r2" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The R^2 of predicting each feature."
					}
					"rmse" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The RMSE of predicting each feature."
					}
					"spearman_coeff" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The Spearman's coefficient of predicting each feature."
					}
					"mcc" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The MCC of predicting each feature."
					}
					"missing_value_accuracy" {
						type "assoc"
						additional_indices {
							type ["number" "null"]
						}
						description "The proportion of missing values that were correctly predicted as missing for each feature."
					}
					"confusion_matrix" {
						type "assoc"
						additional_indices {
							ref "ConfusionMatrix"
						}
						description "The confusion matrix for each feature."
					}
				}
			}
		ReactGroupResponse
			{
				type "assoc"
				additional_indices (false)
				indices {
					"familiarity_conviction_addition" {
						type "list"
						values "number"
						description "The familiarity conviction of adding each group of cases to the model."
					}
					"familiarity_conviction_removal" {
						type "list"
						values "number"
						description "The familiarity conviction of removing each group of cases to the model."
					}
					"kl_divergence_addition" {
						type "list"
						values "number"
						description "The KL divergence of adding each group of cases to the model."
					}
					"kl_divergence_removal" {
						type "list"
						values "number"
						description "The KL divergence of removing each group of cases to the model."
					}
					"p_value_of_addition" {
						type "list"
						values "number"
						description "The p-value of adding each group of cases to the model."
					}
					"p_value_of_removal" {
						type "list"
						values "number"
						description "The p-value of removing each group of cases to the model."
					}
					"distance_contribution" {
						type "list"
						values "number"
						description "The average distance contributions of cases in each group."
					}
					"base_model_average_distance_contribution" {
						type "list"
						values "number"
						description "The average distance contribution of cases in the model."
					}
					"combined_model_average_distance_contribution" {
						type "list"
						values "number"
						description "The average distance contribution of cases in the model and the cases of each group."
					}
				}
			}
		TrainResponse
			{
				type "assoc"
				additional_indices (false)
				indices {
					"num_trained" {
						type "number"
						description "The number of trained cases."
						required (true)
					}
					"ablated_indices" {
						type "list"
						values "number"
						description "The session training indices for the ablated cases."
					}
					"status" {
						type ["string" "null"]
						enum ["analyze" "analyzed"]
						required (true)
						description
							(concat
								"The status output.\n\n"
								"- (null): No status output. This is the default.\n"
								"- analyzed: If auto analysis is enabled and model has grown large enough to be analyzed again and was analyzed.\n"
								"- analyze: If auto analysis is enabled and model has grown large enough to be analyzed again but was not analyzed.\n"
							)
					}
				}
			}
	)
)