;Contains methods for shared deviations.
(null

    ;Helper function that takes in a feature that belongs to a group of shared deviations features and returns all of the features in that group.
	;
	;parameters:
	; feature_group_to_retrieve: A feature that belongs to a group of shared deviations features.
	#!GetSharedDeviationGrouping
	(declare
		(assoc feature_group_to_retrieve (null))
		(indices
			(let
				(assoc current_shared_deviations_key (get !sharedDeviationsMap feature_group_to_retrieve))
				(filter
					(lambda (= (current_value) current_shared_deviations_key) )
					!sharedDeviationsMap
				)
			)
		)
	)

    ;Helper function that takes a mapping or list that has been reduced, and expands it by readding the features from the groups that have been dropped.
	;
	;parameters:
	; compressed_values: an assoc or list of values that need to expanded. If a list, adds back in the features from shared deviations groups that were removed
	;  for calculations If an assoc, adds back in removed features as keys and copies the value of the primary key for each shared deviation group as its value.
	;       e.g. {"a": 2.5, "b": 9} -> {"a": 2.5 "b": 9 "c": 2.5 "d": 2.5} if features a, c, d were in a shared deviations group.
	#!ExpandForSharedDeviations
	(declare
		(assoc compressed_values (null))
		(if (size !sharedDeviationsMap)
			(if (~ (list) compressed_values)
				(assign (assoc
					compressed_values (values (append compressed_values (indices !sharedDeviationsMap)) .true)
				))

				;else compressed_values is an assoc of feature -> value
				(let
					(assoc
						;features that were dropped and had their values combined into their primary shared deviations feature
						removed_features (indices (remove !sharedDeviationsMap (indices compressed_values)))
					)
					(accum (assoc
						compressed_values
							;grab the values for the removed features by looking up their primary key values
							(map
								(lambda
									(get compressed_values (get !sharedDeviationsMap (current_index)))
								)
								(zip removed_features)
							)
					))
				)
			)
		)
		compressed_values
	)

    ;Helper method to reduce feature_residuals_lists into just the residuals lists corresponding to non-shared devation features and
	;primary shared deviation features by combining all the non-primary residuals into their corresponding primary feature residuals
	;
	;parameters:
	; features: A features list
	; feature_residuals_lists: A features residuals whose lists are in the order of the features_list
	#!PrepSharedDeviations
	(let
		(assoc feature_index_map (zip features (indices features)) )

		(filter (map
			(lambda
				(if (contains_value !sharedDeviationsPrimaryFeatures (current_value))
					;combine all the residuals for a feature group
					(apply "append"
						;grap the residuals for the features by their indices
						(unzip
							feature_residuals_lists
							(filter (unzip feature_index_map (get !sharedDeviationGroupByPrimaryMap (current_value))))
						)
					)

					;all non-primary feature residual lists are replaced with null so they can be filtered out
					(contains_value !sharedDeviationsNonPrimaryFeatures (current_value))
					(null)

					;leave residuals for non-shared deviation features as-is
					(get feature_residuals_lists (get feature_index_map (current_value)))
				)
			)
			features
		))
	)
)