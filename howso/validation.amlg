;Contains helper methods for validating user-defined parameters
(null

	;helper method to validate specified batch react parameters are either length of num_reacts or 1
	; if the aren't, sets the variable invalid_react_parameters to (true)
	#!ValidateBatchReactParameter
	(if (and
			(> (size param) 0)
			(!= 1 (size param))
			(!= num_reacts (size param))
		)
		(assign (assoc invalid_react_parameters (true)))
	)

	#!ValidateFeatures
	(let
		(assoc
			errors
				(call !CheckForUntrainedFeatures (assoc
					context_features context_features
					action_features action_features
					action_feature action_feature
				))
		)
		(if (size errors)
			(conclude (call !Return (assoc errors errors)) )
		)
	)


	;Verifies that feature parameters do not contain untrained features
	; this method checks context_features, action_features, and action feature
	; returns a list of strings, one for each invalid parameter
	#!CheckForUntrainedFeatures
	(declare
		(assoc
			errors (list)
			context_features (list)
			action_features (list)
			action_feature (null)

			;not parameters
			valid_features (append !trainedFeatures !reactIntoFeaturesList)
			invalid_feature_set (assoc)
		)

		(if
			(size
				(remove
					(zip (append context_features action_features action_feature))
					valid_features
				)
			)
			;if there is an untrained feature in the any specified features, check each parameter
			;to give the correct error
			(seq
				(if (size context_features)
					(seq
						(assign (assoc invalid_feature_set (remove (zip context_features) valid_features) ))
						(if (size invalid_feature_set)
							(accum (assoc
								errors
									(concat
										"context_features contains features that are neither trained nor "
										"defined in the feature attributes: "
										(apply "concat" (trunc (weave (indices invalid_feature_set) ", ")))
									)
							))
						)
					)
				)

				(if (size action_features)
					(seq
						(assign (assoc invalid_feature_set (remove (zip action_features) valid_features) ))
						(if (size invalid_feature_set)
							(accum (assoc
								errors
									(concat
										"action_features contains features that are neither trained nor "
										"defined in the feature attributes: "
										(apply "concat" (trunc (weave (indices invalid_feature_set) ", ")))
									)
							))
						)
					)
				)

				(if (and (!= (null) action_feature) (!= action_feature ".targetless"))
					(if (not (contains_value valid_features action_feature))
						(accum (assoc
							errors
								(concat
									"action_feature is a feature that is neither trained nor "
									"defined in the feature attributes: "
									action_feature
								)
						))
					)
				)
			)
		)

		errors
	)

)