(seq
	(load_entity
		"../howso.amlg"
		"howso"
		(null)
		(false)
		{escape_resource_name (false) escape_contained_resource_names (false)}
	)
	(set_entity_permissions "howso" (true))
	(call_entity "howso" "initialize" (assoc trainee_id "model" filepath "../"))

	(declare (assoc test_start (system_time)))

	(declare (assoc
		;set to true to see full output
		verbose (false)
		;set to null to do full model
		submodel_size (null)
		;set to true to use case weights in analyze
		use_case_weights (false)

		data (load "performance_data/range_queries.csv")
	))

	(declare (assoc
		features (first data)
		training_data (tail data)
		start (system_time)
	))

	(if verbose (print "Loading range_queries ...\n"))
	(call_entity "howso" "train" (assoc
		features features
		cases (if submodel_size (trunc training_data submodel_size) training_data)
	))

	(print "Loaded range_queries: "
		(get (call_entity "howso" "get_num_training_cases") (list 1 "payload" "count"))
		"\n"
	)

	(declare (assoc load_time (- (system_time) start) ))
	(print "Load time: " load_time "\n")

	(if verbose (print "analyzing range_queries ...\n"))
	(assign (assoc start (system_time) ))
	(call_entity "howso" "analyze" (assoc
		context_features features
		targeted_model "targetless"
		use_case_weights use_case_weights
	))
	(declare (assoc analyze_time (- (system_time) start) ))
	(print "Analyze time: " analyze_time "\n" )

	(assign (assoc start (system_time) ))

	(if verbose (print "residuals for model ...\n"))
	(call_entity "howso" "react_aggregate" (assoc
		context_features features
		num_samples 1000
		details (assoc feature_full_residuals (true))
	))

	(declare (assoc residuals_time (- (system_time) start) ))
	(print "Residuals time: " residuals_time "\n")

	(assign (assoc start (system_time) ))

	(print "Generating...\n")
	(call_entity "howso" "react" (assoc
		action_features features
		desired_conviction 2
		use_regional_residuals (false)
		num_cases_to_generate 10000
	))

	(declare (assoc generate_time (- (system_time) start) ))
	(if verbose (print "test time: " generate_time "\n"))

	(print "Generate time: " generate_time "\n")

	(destroy_entities "model")
	(print "Total time: " (- (system_time) test_start) "\n")
	(print "Range Queries\n- - - - - \n")
	(destroy_entities "howso")
)
