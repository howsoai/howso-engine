(seq
	(load_entity
		"../howso.amlg"
		"howso"
		(null)
		.false
		{escape_resource_name .false escape_contained_resource_names .false}
	)
	(set_entity_permissions "howso" .true)
	(call_entity "howso" "initialize" (assoc trainee_id "model" filepath "../"))

	(declare (assoc test_start (system_time)))

	(declare (assoc
		;set to true to see full output
		verbose .false
		;set to null to do full dataset
		submodel_size (null)
		;set to true to use case weights in analyze
		use_case_weights .false

		data (load "performance_data/OnlineRetail.csv")
	))

	(declare (assoc
		features (first data)
		training_data (tail data)
		start (system_time)
	))


	(call_entity "howso" "set_feature_attributes" (assoc
		feature_attributes
			(assoc
				"InvoiceNo" (assoc "type" "nominal")
				"StockCode" (assoc "type" "nominal")
				"Description"  (assoc "type" "nominal")
				"CustomerID" (assoc "type" "nominal")
				"Country"  (assoc "type" "nominal")
				"Quantity" (assoc "type" "continuous")
				"UnitPrice" (assoc "type" "continuous")
				"InvoiceDate" (assoc "type" "continuous" "date_time_format" "%m/%d/%Y %H:%M")
			)
	))

	(if verbose (print "Loading model ...\n"))
	(call_entity "howso" "train" (assoc
		features features
		cases (if submodel_size (trunc training_data submodel_size) training_data)
	))

	(print "Loaded Online Retail: "
		(get (call_entity "howso" "get_num_training_cases") (list 1 "payload" "count"))
		"\n"
	)

	(declare (assoc load_time (- (system_time) start) ))
	(print "Load time: " load_time "\n")

	(if verbose (print "analyzing online retail ...\n"))
	(assign (assoc start (system_time) ))
	(call_entity "howso" "analyze" (assoc
		context_features features
		targeted_model "targetless"
		use_case_weights use_case_weights
		use_deviations use_deviations
		convergence_threshold 0
	))
	(declare (assoc analyze_time (- (system_time) start) ))
	(print "Analyze time: " analyze_time "\n" )

	(assign (assoc start (system_time) ))

	(if verbose (print "residuals for model ...\n"))
	(call_entity "howso" "react_aggregate" (assoc
		context_features features
		num_samples 1000
		details (assoc feature_full_residuals .true)
	))

	(declare (assoc residuals_time (- (system_time) start) ))
	(print "Residuals time: " residuals_time "\n")

	(assign (assoc start (system_time) ))

	(print "Generating...\n")

	(call_entity "howso" "react" (assoc
		action_features features
		desired_conviction 2
		use_differential_privacy .true
		num_cases_to_generate 2000
	))

	(declare (assoc generate_time (- (system_time) start) ))
	(if verbose (print "test time: " generate_time "\n"))

	(print "Generate time: " generate_time "\n")

	(destroy_entities "model")
	(print "Total time: " (- (system_time) test_start) "\n")
	(print "Online Retail\n- - - - - \n")
	(destroy_entities "howso")
)
