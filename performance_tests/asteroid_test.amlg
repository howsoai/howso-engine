(seq
	(load_entity
		"../howso.amlg"
		"howso"
		(null)
		(false)
		{escape_resource_name (false) escape_contained_resource_names (false)}
	)
	(set_entity_permissions "howso" (true))
	(call_entity "howso" "initialize" (assoc trainee_id "model" filepath "../"))

	(declare (assoc test_start (system_time)))

	(declare (assoc
		;set to true to see full output
		verbose (false)
		;set to null to do full dataset
		submodel_size (null); 100000
		;set to true to use case weights in analyze
		use_case_weights (false)

		data (load "performance_data/Asteroid.csv")
	))

	(declare (assoc
		features (first data)
		training_data (tail data)
		start (system_time)
	))

	(call_entity "howso" "set_feature_attributes" (assoc
		feature_attributes
			(assoc
				"full_name" (assoc "type" "nominal")
				"condition_code" (assoc "type" "nominal" "data_type" "number")
				"extent" (assoc "type" "nominal")
				"IR" (assoc "type" "nominal" "data_type" "number")
				"spec_B" (assoc "type" "nominal")
				"spec_T" (assoc "type" "nominal")
				"neo" (assoc "type" "nominal")
				"pha" (assoc "type" "nominal")
			)
	))

	(if verbose (print "Loading Asteroid ...\n"))
	(call_entity "howso" "train" (assoc
		features features
		cases (if submodel_size (trunc training_data submodel_size) training_data)
	))

    ; test substitions too
	(call_entity "howso" "set_substitute_feature_values" (assoc substitution_value_map (assoc "full_name" (assoc))))

	(print
		"Loaded Asteroid: "
		(get (call_entity "howso" "get_num_training_cases") (list 1 "payload" "count"))
		"\n"
	)

	(declare (assoc load_time (- (system_time) start) ))
	(print "Load time: " load_time "\n")

	(assign (assoc start (system_time) ))
	(if verbose (print "analyzing ...\n"))
	(call_entity "howso" "analyze" (assoc
		context_features features
		targeted_model "targetless"
		use_case_weights use_case_weights
		convergence_threshold 0
	))
	(declare (assoc analyze_time (- (system_time) start) ))
	(print "Analyze time: " analyze_time "\n")

	(assign (assoc start (system_time) ))

	(if verbose (print "residuals for Asteroid ...\n"))
	(call_entity "howso" "react_aggregate" (assoc
		context_features features
		num_samples 1000
		details (assoc feature_full_residuals (true))
	))

	(declare (assoc residuals_time (- (system_time) start) ))
	(print "Residuals time: " residuals_time "\n")

	(assign (assoc start (system_time) ))

	(call_entity "howso" "react" (assoc
		action_features features
		desired_conviction 5
		use_differential_privacy (true)
		generate_new_cases "no"
		num_cases_to_generate 2000
	))

	(declare (assoc generate_time (- (system_time) start) ))
	(if verbose (print "test time: " generate_time "\n"))

	(print "Generate time: " generate_time "\n")

	(destroy_entities "asteroid")
	(print "Total time: " (- (system_time) test_start) "\n")
	(print "Asteroid\n- - - - - \n")
	(destroy_entities "howso")
)
