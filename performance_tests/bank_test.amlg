(seq
	#howso (null)
	(load_entity "../howso.amlg" "howso" (false) (false))
	(call_entity "howso" "initialize" (assoc trainee_id "model"))

	(declare (assoc test_start (system_time)))

	(call_entity "howso" "set_internal_parameters" (assoc
		default_hyperparameter_map (assoc "k" 8 "p" 2 "dt" -1 )
	))

	(declare (assoc
		;set to true to see full output
		verbose (false)
		;set to null to do full model
		submodel_size (null) ;10000
		;set to true to also run analyze
		do_analyze (true)
		;set to true to force deviations in analyze
		use_deviations (null)
		;set to true to use case weights in analyze
		use_case_weights (true)

	    data (load "performance_data/bank-full.csv")
	))

	(declare (assoc
		features (first data)
		training_data (tail data)
		start (system_time)
		k 8
		p 2
		use_deviations (null)
	))

	(call_entity "howso" "set_random_seed" (assoc seed "abcdef"))

	(call_entity "howso" "set_feature_attributes" (assoc
		features
			(assoc
				"job" (assoc "type" "nominal"  "id_feature" (true))
				"marital" (assoc "type" "nominal")
				"education"  (assoc "type" "nominal")
				"default" (assoc "type" "nominal")
				"housing"  (assoc "type" "nominal")
				"loan" (assoc "type" "nominal")
				"contact" (assoc "type" "nominal")
				"month" (assoc "type" "nominal")
				"poutcome"  (assoc "type" "nominal")
				"y" (assoc "type" "nominal")
				"pdays" (assoc "type" "ordinal")
				"age" (assoc "type" "ordinal")
				"day" (assoc "type" "ordinal")
				"campaign" (assoc "type" "ordinal")
			)
	))

	(call_entity "howso" "train" (assoc
		features features
		input_cases (if submodel_size (trunc training_data submodel_size) training_data)
	))

	(declare (assoc
		load_time (- (system_time) start)
		num_cases (get (call_entity "howso" "get_num_training_cases") (list 1 "payload" "count"))
	))
	(print "Loaded Bank: " num_cases "\n")
	(print "Load time: " load_time "\n")

	(if do_analyze
		(seq
			(if verbose (print "analyzing Bank ...\n"))
			(assign (assoc start (system_time) ))
			(call_entity "howso" "analyze" (assoc
				context_features features
				targeted_model "targetless"
				use_case_weights use_case_weights
				use_deviations use_deviations
			))
			(declare (assoc analyze_time (- (system_time) start) ))
			(print "Analyze time: " analyze_time "\n" )
		)
	)


	(declare (assoc params (get (call_entity "howso" "get_internal_parameters" (assoc action_feature ".targetless")) (list 1 "payload")) ))
	(if verbose (print "analyzed to: " (get params "hyperparameter_map")))

	(assign (assoc
		k (get params (list "hyperparameter_map" "k"))
		p (get params (list "hyperparameter_map" "p"))
	))
	(print "BANK params (k p): " k " " p "\n- - - - -\n")

	(assign (assoc start (system_time) ))

	(call_entity "howso" "react_aggregate" (assoc
		context_features features
		num_samples 1000
		details (assoc feature_residuals_robust (true))
		use_case_weights use_case_weights
	))

	(declare (assoc residuals_time (- (system_time) start) ))
	(print "Residuals time: " residuals_time "\n")

	(assign (assoc start (system_time) ))

	(declare (assoc
		output_data
			(append
				(list features)
				(get
					(call_entity "howso" "batch_react" (assoc
						action_features features
						desired_conviction 5
						use_regional_model_residuals (false)
						use_case_weights use_case_weights
						generate_new_cases "no"
						num_cases_to_generate num_cases
					))
					(list 1 "payload" "action_values")
				)
			)

	))
	(declare (assoc generate_time (- (system_time) start) ))
	(if verbose (print "\ntime: " generate_time "\n"))

	(store "bank_gen.csv" output_data)

	(print "Generate time: " generate_time "\n")

	(destroy_entities "model")
	(print "Total time: " (- (system_time) test_start) "\n")
	(print "Bank\n- - - - - \n")
)
